{"version":3,"sources":["logo.svg","components/Navigation.jsx","components/Home.jsx","components/Articles.jsx","components/Customers.jsx","components/Orders.jsx","components/PageComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navigation","props","state","activeItem","onSelect","result","setState","itemId","this","Nav","aria-label","NavList","NavItem","id","isActive","to","React","Component","Home","PageSection","variant","PageSectionVariants","light","TextContent","Text","component","api","axios","create","baseURL","Articles","_isMounted","getLength","get","then","res","length","data","fetch","pageParameter","perPageParameter","params","page","size","articles","post","name","articleNameValue","description","articleDescriptionValue","category","articleCategoryDrawerValue","isExpanded","perPage","undefined","articleIdValue","update","put","delete","search","searchValue","filter","categorySelected","deleteSearch","columns","title","transforms","sortable","sortBy","drawerEdit","categoryIsExpanded","drawerRef","createRef","onSort","bind","onRowClick","handleArticleCategoryChange","handleArticleNameChange","handleArticleDescriptionChange","categoryDrawerOptions","value","label","disabled","categorySelectOptions","isPlaceholder","onSetPage","_event","onPerPageSelect","onExpand","current","focus","onClickAddArticle","onCloseClick","onSearchValueChange","inputValue","onCategoryToggle","onCategorySelect","event","selection","console","log","clearCategorySelection","index","direction","sortedRows","sort","a","b","SortByDirection","asc","reverse","row","article","secretTableRowKeyId","button","Button","onClick","toolbarItems","Fragment","ToolbarItem","InputGroup","TextInput","type","onChange","ButtonVariant","control","Select","SelectVariant","single","onToggle","selections","isOpen","map","SelectOption","isDisabled","aria-expanded","Pagination","itemCount","widgetId","PaginationVariant","top","isCompact","formContent","Form","isHorizontal","FormGroup","isRequired","fieldId","aria-describedby","TextArea","FormSelect","option","FormSelectOption","ActionGroup","panelContent","DrawerPanelContent","DrawerHead","tabIndex","ref","DrawerActions","DrawerCloseButton","drawerContent","Table","cells","rows","Toolbar","ToolbarContent","Drawer","isInline","DrawerContent","DrawerContentBody","Customers","customers","first_name","customerFirstNameValue","last_name","customerLastNameValue","username","customerUsernameValue","password","customerPasswordValue","dob","customerDobValue","gender","customerGenderDrawerValue","customerIdValue","genderSelected","genderIsExpanded","handleCustomerFirstNameChange","handleCustomerLastNameChange","handleCustomerUsernameChange","handleCustomerPasswordChange","handleCustomerDobChange","handleCustomerGenderChange","genderDrawerOptions","genderSelectOptions","onClickAddCustomer","onGenderToggle","onGenderSelect","clearGenderSelection","customer","DatePicker","orderApi","articleApi","customerApi","Orders","getCustomers","getArticles","orders","orderArticleValueIds","orderArticleValue","find","item","shipping","orderShippingDrawerValue","notes","orderNotesValue","status","orderStatusDrawerValue","orderCustomerValue","orderIdValue","statusFilter","statusSelected","shippingFilter","shippingSelected","statusIsExpanded","shippingIsExpanded","isOpenOrderArticles","handleOrderNotesChange","handleOrderShippingChange","handleOrderStatusChange","handleOrderCustomerChange","onToggleOrderArticles","onSelectOrderArticles","includes","prevState","clearSelectionOrderArticles","statusDrawerOptions","statusSelectOptions","shippingDrawerOptions","shippingSelectOptions","onClickAddOrder","onShippingToggle","onShippingSelect","clearShippingSelection","onStatusToggle","onStatusSelect","clearStatusSelection","order","customerDrawerOptions","container","concat","articleDrawerOptions","typeaheadMulti","typeAheadAriaLabel","onClear","aria-labelledby","placeholderText","e","join","PageComponent","isNavOpen","onNavToggle","Header","PageHeader","logo","className","headerTools","PageHeaderTools","Tooltip","position","enableFlip","content","showNavToggle","Sidebar","PageSidebar","nav","Page","header","sidebar","path","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93f0afcc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport { Nav, NavItem, NavList } from \"@patternfly/react-core\";\nimport \"./stylesheet.css\";\nimport { BrowserRouter as Router, Switch, Link, Route } from \"react-router-dom\";\nimport \"@patternfly/react-core/dist/styles/base.css\";\nimport \"@patternfly/patternfly/patternfly.css\";\n\nclass Navigation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: 3,\n    };\n    this.onSelect = (result) => {\n      this.setState({\n        activeItem: result.itemId,\n      });\n    };\n  }\n\n  render() {\n    const { activeItem } = this.state;\n\n    return (\n      <Nav onSelect={this.onSelect} aria-label=\"Nav\">\n        <NavList>\n          <NavItem id=\"orders-link\" itemId={0} isActive={activeItem === 0}>\n            <Link to=\"/orders\">Orders</Link>\n          </NavItem>\n          <NavItem id=\"articles-link\" itemId={1} isActive={activeItem === 1}>\n            <Link to=\"/articles\">Articles</Link>\n          </NavItem>\n          <NavItem id=\"customers-link\" itemId={2} isActive={activeItem === 2}>\n            <Link to=\"/customers\">Customers</Link>\n          </NavItem>\n        </NavList>\n      </Nav>\n    );\n  }\n}\n\nexport default Navigation;\n","import React, { Component } from \"react\";\n\nimport {\n  PageSection,\n  TextContent,\n  Text,\n  PageSectionVariants,\n  Link,\n} from \"@patternfly/react-core\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <PageSection variant={PageSectionVariants.light}>\n          <TextContent>\n            <Text component=\"h1\">Home</Text>\n            <Text component=\"p\">\n              Navigate yourself through a web-application built with a\n              Patternfly (React) Frontend and a Quarkus Backend.\n            </Text>\n            <Text component=\"p\">\n              Start out by clicking at the top-left corner and one of the shown\n              links, and navigate yourself through the Website.\n            </Text>\n          </TextContent>\n        </PageSection>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport \"@patternfly/react-core/dist/styles/base.css\";\nimport \"@patternfly/patternfly/patternfly.css\";\nimport \"./stylesheet.css\";\n\nimport SearchIcon from \"@patternfly/react-icons/dist/js/icons/search-icon\";\nimport TimesIcon from \"@patternfly/react-icons/dist/js/icons/times-icon\";\n\nimport {\n  PageSection,\n  TextContent,\n  Text,\n  PageSectionVariants,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n  Button,\n  ButtonVariant,\n  InputGroup,\n  TextInput,\n  Pagination,\n  PaginationVariant,\n  Drawer,\n  DrawerPanelContent,\n  DrawerContent,\n  DrawerContentBody,\n  DrawerHead,\n  DrawerActions,\n  DrawerCloseButton,\n  Form,\n  FormGroup,\n  TextArea,\n  FormSelect,\n  FormSelectOption,\n  ActionGroup,\n  Select,\n  SelectVariant,\n  SelectOption,\n} from \"@patternfly/react-core\";\n\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  sortable,\n  SortByDirection,\n} from \"@patternfly/react-table\";\n\nimport axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"http://localhost:8080/article\",\n});\n\nclass Articles extends Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n    this.getLength();\n\n    this.state = {\n      articles: [],\n      columns: [\n        { title: \"Name\", transforms: [sortable] },\n        { title: \"Description\", transforms: [sortable] },\n        { title: \"Category\", transforms: [sortable] },\n      ],\n      sortBy: {},\n      page: \"0\",\n      perPage: \"10\",\n      length: 0,\n      isExpanded: false,\n      drawerEdit: false,\n      searchValue: \"\",\n      categoryIsExpanded: false,\n      categorySelected: null,\n\n      articleIdValue: undefined,\n      articleCategoryDrawerValue: undefined,\n      articleNameValue: \"\",\n      articleDescriptionValue: \"\",\n    };\n    this.drawerRef = React.createRef();\n    this.onSort = this.onSort.bind(this);\n    this.onRowClick = this.onRowClick.bind(this);\n\n    this.handleArticleCategoryChange = (articleCategoryDrawerValue) => {\n      this.setState({ articleCategoryDrawerValue });\n    };\n    this.handleArticleNameChange = (articleNameValue) => {\n      this.setState({ articleNameValue });\n    };\n    this.handleArticleDescriptionChange = (articleDescriptionValue) => {\n      this.setState({ articleDescriptionValue });\n    };\n\n    this.categoryDrawerOptions = [\n      { value: undefined, label: \"Please Choose\", disabled: false },\n      { value: 0, label: \"Toys\", disabled: false },\n      { value: 1, label: \"Fashion\", disabled: false },\n      { value: 2, label: \"Books\", disabled: false },\n      { value: 3, label: \"Movies\", disabled: false },\n      { value: 4, label: \"Games\", disabled: false },\n      { value: 5, label: \"Music\", disabled: false },\n    ];\n\n    this.categorySelectOptions = [\n      { value: \"Category\", disabled: false, isPlaceholder: true },\n      { value: \"Toys\", disabled: false },\n      { value: \"Fashion\", disabled: false },\n      { value: \"Books\", disabled: false },\n      { value: \"Movies\", disabled: false },\n      { value: \"Games\", disabled: false },\n      { value: \"Music\", disabled: false },\n    ];\n\n    this.onSetPage = (_event, value) => {\n      this.fetch(value - 1, this.state.perPage);\n      this.setState({\n        page: value,\n      });\n    };\n    this.onPerPageSelect = (_event, value) => {\n      this.setState({\n        perPage: value,\n      });\n      this.fetch(0, value);\n    };\n\n    this.onExpand = () => {\n      this.drawerRef.current && this.drawerRef.current.focus();\n    };\n\n    this.onClickAddArticle = () => {\n      const isExpanded = !this.state.isExpanded;\n      this.setState({\n        drawerEdit: false,\n        isExpanded,\n      });\n    };\n\n    this.onCloseClick = () => {\n      this.setState({\n        isExpanded: false,\n        articleNameValue: \"\",\n        articleDescriptionValue: \"\",\n        articleCategoryDrawerValue: undefined,\n      });\n    };\n\n    this.onSearchValueChange = (inputValue) => {\n      this.setState({\n        searchValue: inputValue,\n      });\n    };\n\n    this.onCategoryToggle = (isExpanded) => {\n      this.setState({\n        categoryIsExpanded: isExpanded,\n      });\n    };\n\n    this.onCategorySelect = (event, selection, isPlaceholder) => {\n      console.log(selection);\n      if (isPlaceholder) this.clearCategorySelection();\n      this.setState(\n        {\n          categorySelected: selection,\n          categoryIsExpanded: false,\n        },\n        function () {\n          this.search();\n        }\n      );\n    };\n\n    this.clearCategorySelection = () => {\n      this.setState({\n        categorySelected: null,\n        categoryIsExpanded: false,\n      });\n      this.fetch(this.state.page, this.state.perPageParameter);\n    };\n  }\n\n  getLength = () => {\n    api.get(\"/length\").then((res) => {\n      this.setState({ length: res.data });\n    });\n  };\n\n  fetch = (pageParameter, perPageParameter) => {\n    const params = {\n      page: pageParameter,\n      size: perPageParameter,\n    };\n\n    api.get(\"/paginated\", { params }).then((res) => {\n      this.setState({ articles: res.data });\n    });\n  };\n\n  post = () => {\n    api.post(\"/\", {\n      name: this.state.articleNameValue,\n      description: this.state.articleDescriptionValue,\n      category: this.state.articleCategoryDrawerValue,\n    });\n\n    this.setState({\n      isExpanded: false,\n      articleNameValue: \"\",\n      articleDescriptionValue: \"\",\n      page: \"0\",\n      perPage: \"10\",\n      articleCategoryDrawerValue: undefined,\n      articleIdValue: undefined,\n    });\n  };\n\n  update = () => {\n    api.put(\"/\" + this.state.articleIdValue, {\n      name: this.state.articleNameValue,\n      description: this.state.articleDescriptionValue,\n      category: this.state.articleCategoryDrawerValue,\n    });\n\n    this.setState({\n      isExpanded: false,\n      articleNameValue: \"\",\n      articleDescriptionValue: \"\",\n      page: \"0\",\n      perPage: \"10\",\n      articleCategoryDrawerValue: undefined,\n      articleIdValue: undefined,\n    });\n  };\n\n  delete = () => {\n    api.delete(\"/\" + this.state.articleIdValue);\n\n    this.setState({\n      isExpanded: false,\n      articleNameValue: \"\",\n      articleDescriptionValue: \"\",\n      page: \"0\",\n      perPage: \"10\",\n      articleCategoryDrawerValue: undefined,\n      articleIdValue: undefined,\n    });\n  };\n\n  search = () => {\n    const params = {\n      search: this.state.searchValue,\n      filter: this.state.categorySelected,\n    };\n    api.get(\"/search\", { params }).then((res) => {\n      this.setState({ articles: res.data });\n    });\n  };\n\n  deleteSearch = () => {\n    this.setState({ searchValue: \"\" });\n    this.fetch(this.state.page, this.state.perPage);\n  };\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.fetch(\"0\", \"10\");\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  onSort(_event, index, direction) {\n    const sortedRows = this.state.articles.sort((a, b) =>\n      a[index] < b[index] ? -1 : a[index] > b[index] ? 1 : 0\n    );\n    this.setState({\n      sortBy: {\n        index,\n        direction,\n      },\n      articles:\n        direction === SortByDirection.asc ? sortedRows : sortedRows.reverse(),\n    });\n  }\n\n  onRowClick(_event, row) {\n    const article = this.state.articles[row.secretTableRowKeyId];\n\n    switch (article.category) {\n      case \"TOYS\":\n        this.setState({ articleCategoryDrawerValue: 0 });\n        break;\n      case \"FASHION\":\n        this.setState({ articleCategoryDrawerValue: 1 });\n        break;\n      case \"BOOKS\":\n        this.setState({ articleCategoryDrawerValue: 2 });\n        break;\n      case \"MOVIES\":\n        this.setState({ articleCategoryDrawerValue: 3 });\n        break;\n      case \"GAMES\":\n        this.setState({ articleCategoryDrawerValue: 4 });\n        break;\n      case \"MUSIC\":\n        this.setState({ articleCategoryDrawerValue: 5 });\n        break;\n\n      default:\n        this.setState({ articleCategoryDrawerValue: undefined });\n        break;\n    }\n    this.setState({\n      drawerEdit: true,\n      isExpanded: true,\n      articleNameValue: article.name,\n      articleDescriptionValue: article.description,\n      articleIdValue: article.id,\n    });\n  }\n\n  render() {\n    const {\n      columns,\n      articles,\n      sortBy,\n      isExpanded,\n      articleNameValue,\n      articleDescriptionValue,\n      articleCategoryDrawerValue,\n      drawerEdit,\n      categoryIsExpanded,\n      categorySelected,\n    } = this.state;\n\n    let button;\n\n    if (!drawerEdit) {\n      button = (\n        <Button variant=\"primary\" onClick={this.post}>\n          Add article\n        </Button>\n      );\n    } else {\n      button = (\n        <div>\n          <Button variant=\"primary\" onClick={this.update}>\n            Edit article\n          </Button>\n          <Button variant=\"danger\" onClick={this.delete} id=\"deleteButton\">\n            Delete article\n          </Button>\n        </div>\n      );\n    }\n\n    const toolbarItems = (\n      <React.Fragment>\n        <ToolbarItem>\n          <InputGroup>\n            <TextInput\n              name=\"searchInput\"\n              id=\"searchInput\"\n              type=\"text\"\n              aria-label=\"search input\"\n              onChange={this.onSearchValueChange}\n              value={this.state.searchValue}\n            />\n            <Button\n              variant={ButtonVariant.control}\n              aria-label=\"search button for search input\"\n              onClick={this.search}\n            >\n              <SearchIcon />\n            </Button>\n            <Button\n              variant={ButtonVariant.control}\n              aria-label=\"delete button for search input\"\n              onClick={this.deleteSearch}\n            >\n              <TimesIcon />\n            </Button>\n          </InputGroup>\n        </ToolbarItem>\n        <ToolbarItem>\n          <Select\n            variant={SelectVariant.single}\n            aria-label=\"Select Input\"\n            onToggle={this.onCategoryToggle}\n            onSelect={this.onCategorySelect}\n            selections={categorySelected}\n            isOpen={categoryIsExpanded}\n          >\n            {this.categorySelectOptions.map((category, index) => (\n              <SelectOption\n                isDisabled={category.disabled}\n                isPlaceholder={category.isPlaceholder}\n                key={index}\n                value={category.value}\n              />\n            ))}\n          </Select>\n        </ToolbarItem>\n        <ToolbarItem variant=\"separator\" />\n        <ToolbarItem>\n          <Button\n            variant=\"primary\"\n            aria-expanded={isExpanded}\n            onClick={this.onClickAddArticle}\n          >\n            Add Article\n          </Button>\n        </ToolbarItem>\n        <ToolbarItem variant=\"separator\" />\n\n        <ToolbarItem>\n          <Pagination\n            id={\"pagination\"}\n            itemCount={this.state.length}\n            widgetId=\"pagination-options-menu-top\"\n            perPage={this.state.perPage}\n            page={this.state.page}\n            variant={PaginationVariant.top}\n            onSetPage={this.onSetPage}\n            onPerPageSelect={this.onPerPageSelect}\n            isCompact\n          />\n        </ToolbarItem>\n      </React.Fragment>\n    );\n\n    const formContent = (\n      <Form isHorizontal>\n        <FormGroup label=\"Name\" isRequired fieldId=\"horizontal-form-name\">\n          <TextInput\n            value={articleNameValue}\n            isRequired\n            type=\"text\"\n            id=\"horizontal-form-name\"\n            aria-describedby=\"horizontal-form-name-helper\"\n            name=\"horizontal-form-name\"\n            onChange={this.handleArticleNameChange}\n          />\n        </FormGroup>\n        <FormGroup label=\"Article Description\" fieldId=\"horizontal-form-desc\">\n          <TextArea\n            value={articleDescriptionValue}\n            onChange={this.handleArticleDescriptionChange}\n            name=\"horizontal-form-desc\"\n            id=\"horizontal-form-desc\"\n          />\n        </FormGroup>\n        <FormGroup label=\"Category\" fieldId=\"horizontal-form-category\">\n          <FormSelect\n            value={articleCategoryDrawerValue}\n            isRequired\n            onChange={this.handleArticleCategoryChange}\n            id=\"horzontal-form-category\"\n            name=\"horizontal-form-category\"\n          >\n            {this.categoryDrawerOptions.map((option, index) => (\n              <FormSelectOption\n                isDisabled={option.disabled}\n                key={index}\n                value={option.value}\n                label={option.label}\n              />\n            ))}\n          </FormSelect>\n        </FormGroup>\n\n        <ActionGroup>{button}</ActionGroup>\n      </Form>\n    );\n\n    const panelContent = (\n      <DrawerPanelContent>\n        <DrawerHead>\n          <span tabIndex={isExpanded ? 0 : -1} ref={this.drawerRef}>\n            {formContent}\n          </span>\n          <DrawerActions>\n            <DrawerCloseButton onClick={this.onCloseClick} />\n          </DrawerActions>\n        </DrawerHead>\n      </DrawerPanelContent>\n    );\n\n    const drawerContent = (\n      <Table\n        aria-label=\"Sortable Table\"\n        sortBy={sortBy}\n        onSort={this.onSort}\n        cells={columns}\n        rows={articles.map((article, index) => [\n          article.name,\n          article.description,\n          article.category,\n        ])}\n      >\n        <TableHeader />\n        <TableBody onRowClick={this.onRowClick} />\n      </Table>\n    );\n\n    return (\n      <div>\n        <PageSection variant={PageSectionVariants.light}>\n          <TextContent>\n            <Text component=\"h1\">Articles</Text>\n            <Text component=\"p\">Shows every listed article.</Text>\n          </TextContent>\n          <Toolbar id=\"toolbar\">\n            <ToolbarContent>{toolbarItems}</ToolbarContent>\n          </Toolbar>\n        </PageSection>\n        <PageSection>\n          <Drawer isExpanded={isExpanded} isInline onExpand={this.onExpand}>\n            <DrawerContent panelContent={panelContent}>\n              <DrawerContentBody>{drawerContent}</DrawerContentBody>\n            </DrawerContent>\n          </Drawer>\n        </PageSection>\n      </div>\n    );\n  }\n}\n\nexport default Articles;\n","import React, { Component } from \"react\";\nimport \"@patternfly/react-core/dist/styles/base.css\";\nimport \"@patternfly/patternfly/patternfly.css\";\n\nimport SearchIcon from \"@patternfly/react-icons/dist/js/icons/search-icon\";\nimport TimesIcon from \"@patternfly/react-icons/dist/js/icons/times-icon\";\n\nimport {\n  PageSection,\n  TextContent,\n  Text,\n  PageSectionVariants,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n  Button,\n  ButtonVariant,\n  InputGroup,\n  TextInput,\n  Pagination,\n  PaginationVariant,\n  Drawer,\n  DrawerPanelContent,\n  DrawerContent,\n  DrawerContentBody,\n  DrawerHead,\n  DrawerActions,\n  DrawerCloseButton,\n  Form,\n  FormGroup,\n  TextArea,\n  FormSelect,\n  FormSelectOption,\n  ActionGroup,\n  Select,\n  SelectVariant,\n  SelectOption,\n  DatePicker,\n} from \"@patternfly/react-core\";\n\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  sortable,\n  SortByDirection,\n} from \"@patternfly/react-table\";\n\nimport axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"http://localhost:8080/customer\",\n});\n\nclass Customers extends Component {\n  constructor(props) {\n    super(props);\n    this.getLength();\n\n    this.state = {\n      customers: [],\n      columns: [\n        { title: \"First Name\", transforms: [sortable] },\n        { title: \"Last Name\", transforms: [sortable] },\n        { title: \"Username\", transforms: [sortable] },\n        { title: \"Date of birth\", transforms: [sortable] },\n        { title: \"Gender\", transforms: [sortable] },\n      ],\n      sortBy: {},\n      page: \"0\",\n      perPage: \"10\",\n      length: 0,\n      isExpanded: false,\n      drawerEdit: false,\n      searchValue: \"\",\n      genderIsExpanded: false,\n      genderSelected: null,\n\n      customerIdValue: undefined,\n      customerFirstNameValue: \"\",\n      customerLastNameValue: \"\",\n      customerUsernameValue: \"\",\n      customerPasswordValue: \"\",\n      customerDobValue: undefined,\n      customerGenderDrawerValue: undefined,\n    };\n    this.drawerRef = React.createRef();\n    this.onSort = this.onSort.bind(this);\n    this.onRowClick = this.onRowClick.bind(this);\n\n    this.handleCustomerFirstNameChange = (customerFirstNameValue) => {\n      this.setState({ customerFirstNameValue });\n    };\n    this.handleCustomerLastNameChange = (customerLastNameValue) => {\n      this.setState({ customerLastNameValue });\n    };\n    this.handleCustomerUsernameChange = (customerUsernameValue) => {\n      this.setState({ customerUsernameValue });\n    };\n    this.handleCustomerPasswordChange = (customerPasswordValue) => {\n      this.setState({ customerPasswordValue });\n    };\n    this.handleCustomerDobChange = (customerDobValue) => {\n      console.log(customerDobValue);\n      this.setState({ customerDobValue });\n    };\n    this.handleCustomerGenderChange = (customerGenderDrawerValue) => {\n      this.setState({ customerGenderDrawerValue });\n    };\n\n    this.genderDrawerOptions = [\n      { value: undefined, label: \"Please Choose\", disabled: false },\n      { value: 0, label: \"Male\", disabled: false },\n      { value: 1, label: \"Female\", disabled: false },\n      { value: 2, label: \"Diverse\", disabled: false },\n    ];\n\n    this.genderSelectOptions = [\n      { value: \"Gender\", disabled: false, isPlaceholder: true },\n      { value: \"Male\", disabled: false },\n      { value: \"Female\", disabled: false },\n      { value: \"Diverse\", disabled: false },\n    ];\n\n    this.onSetPage = (_event, value) => {\n      this.fetch(value - 1, this.state.perPage);\n      this.setState({\n        page: value,\n      });\n    };\n    this.onPerPageSelect = (_event, value) => {\n      this.setState({\n        perPage: value,\n      });\n      this.fetch(0, value);\n    };\n\n    this.onExpand = () => {\n      this.drawerRef.current && this.drawerRef.current.focus();\n    };\n\n    this.onClickAddCustomer = () => {\n      const isExpanded = !this.state.isExpanded;\n      this.setState({\n        drawerEdit: false,\n        isExpanded,\n      });\n    };\n\n    this.onCloseClick = () => {\n      this.setState({\n        isExpanded: false,\n        customerFirstNameValue: \"\",\n        customerLastNameValue: \"\",\n        customerUsernameValue: \"\",\n        customerPasswordValue: \"\",\n        customerGenderDrawerValue: undefined,\n      });\n    };\n\n    this.onSearchValueChange = (inputValue) => {\n      this.setState({\n        searchValue: inputValue,\n      });\n    };\n\n    this.onGenderToggle = (isExpanded) => {\n      this.setState({\n        genderIsExpanded: isExpanded,\n      });\n    };\n\n    this.onGenderSelect = (event, selection, isPlaceholder) => {\n      if (isPlaceholder) this.clearGenderSelection();\n      this.setState(\n        {\n          genderSelected: selection,\n          genderIsExpanded: false,\n        },\n        function () {\n          this.search();\n        }\n      );\n    };\n\n    this.clearGenderSelection = () => {\n      this.setState({\n        genderSelected: null,\n        genderIsExpanded: false,\n      });\n      this.fetch(this.state.page, this.state.perPageParameter);\n    };\n  }\n\n  getLength = () => {\n    api.get(\"/length\").then((res) => {\n      this.setState({ length: res.data });\n    });\n  };\n\n  fetch = (pageParameter, perPageParameter) => {\n    const params = {\n      page: pageParameter,\n      size: perPageParameter,\n    };\n\n    api.get(\"/paginated\", { params }).then((res) => {\n      this.setState({ customers: res.data });\n    });\n  };\n\n  post = () => {\n    api.post(\"/\", {\n      first_name: this.state.customerFirstNameValue,\n      last_name: this.state.customerLastNameValue,\n      username: this.state.customerUsernameValue,\n      password: this.state.customerPasswordValue,\n      dob: this.state.customerDobValue,\n      gender: this.state.customerGenderDrawerValue,\n    });\n\n    this.setState({\n      isExpanded: false,\n      customerFirstNameValue: \"\",\n      customerLastNameValue: \"\",\n      customerUsernameValue: \"\",\n      customerPasswordValue: \"\",\n      page: \"0\",\n      perPage: \"10\",\n      customerGenderDrawerValue: undefined,\n      customerIdValue: undefined,\n      customerDobValue: undefined,\n    });\n  };\n\n  update = () => {\n    api.put(\"/\" + this.state.customerIdValue, {\n      first_name: this.state.customerFirstNameValue,\n      last_name: this.state.customerLastNameValue,\n      username: this.state.customerUsernameValue,\n      password: this.state.customerPasswordValue,\n      dob: this.state.customerDobValue,\n      gender: this.state.customerGenderDrawerValue,\n    });\n\n    this.setState({\n      isExpanded: false,\n      customerFirstNameValue: \"\",\n      customerLastNameValue: \"\",\n      customerUsernameValue: \"\",\n      customerPasswordValue: \"\",\n      page: \"0\",\n      perPage: \"10\",\n      customerGenderDrawerValue: undefined,\n      customerIdValue: undefined,\n      customerDobValue: undefined,\n    });\n  };\n\n  delete = () => {\n    api.delete(\"/\" + this.state.customerIdValue);\n\n    this.setState({\n      isExpanded: false,\n      customerFirstNameValue: \"\",\n      customerLastNameValue: \"\",\n      customerUsernameValue: \"\",\n      customerPasswordValue: \"\",\n      page: \"0\",\n      perPage: \"10\",\n      customerGenderDrawerValue: undefined,\n      customerIdValue: undefined,\n      customerDobValue: undefined,\n    });\n  };\n\n  search = () => {\n    const params = {\n      search: this.state.searchValue,\n      filter: this.state.genderSelected,\n    };\n    api.get(\"/search\", { params }).then((res) => {\n      this.setState({ customers: res.data });\n    });\n  };\n\n  deleteSearch = () => {\n    this.setState({ searchValue: \"\" });\n    this.fetch(this.state.page, this.state.perPage);\n  };\n\n  componentDidMount() {\n    this.fetch(\"0\", \"10\");\n  }\n\n  onSort(_event, index, direction) {\n    const sortedRows = this.state.customers.sort((a, b) =>\n      a[index] < b[index] ? -1 : a[index] > b[index] ? 1 : 0\n    );\n    this.setState({\n      sortBy: {\n        index,\n        direction,\n      },\n      customers:\n        direction === SortByDirection.asc ? sortedRows : sortedRows.reverse(),\n    });\n  }\n\n  onRowClick(_event, row) {\n    const customer = this.state.customers[row.secretTableRowKeyId];\n\n    switch (customer.gender) {\n      case \"MALE\":\n        this.setState({ customerGenderDrawerValue: 0 });\n        break;\n      case \"FEMALE\":\n        this.setState({ customerGenderDrawerValue: 1 });\n        break;\n      case \"DIVERSE\":\n        this.setState({ customerGenderDrawerValue: 2 });\n        break;\n      default:\n        this.setState({ customerGenderDrawerValue: undefined });\n        break;\n    }\n\n    this.setState({\n      drawerEdit: true,\n      isExpanded: true,\n      customerFirstNameValue: customer.first_name,\n      customerLastNameValue: customer.last_name,\n      customerUsernameValue: customer.username,\n      customerPasswordValue: customer.password,\n      customerDobValue: customer.dob,\n      customerIdValue: customer.id,\n    });\n  }\n\n  render() {\n    const {\n      columns,\n      customers,\n      sortBy,\n      isExpanded,\n      customerFirstNameValue,\n      customerLastNameValue,\n      customerUsernameValue,\n      customerPasswordValue,\n      customerDobValue,\n      customerGenderDrawerValue,\n      drawerEdit,\n      genderIsExpanded,\n      genderSelected,\n    } = this.state;\n\n    let button;\n\n    if (!drawerEdit) {\n      button = (\n        <Button variant=\"primary\" onClick={this.post}>\n          Add customer\n        </Button>\n      );\n    } else {\n      button = (\n        <div>\n          <Button variant=\"primary\" onClick={this.update}>\n            Edit customer\n          </Button>\n          <Button variant=\"danger\" onClick={this.delete} id=\"deleteButton\">\n            Delete customer\n          </Button>\n        </div>\n      );\n    }\n\n    const toolbarItems = (\n      <React.Fragment>\n        <ToolbarItem>\n          <InputGroup>\n            <TextInput\n              name=\"textInput1\"\n              id=\"textInput1\"\n              type=\"search\"\n              aria-label=\"search input example\"\n              onChange={this.onSearchValueChange}\n              value={this.state.searchValue}\n            />\n            <Button\n              variant={ButtonVariant.control}\n              aria-label=\"search button for search input\"\n              onClick={this.search}\n            >\n              <SearchIcon />\n            </Button>\n            <Button\n              variant={ButtonVariant.control}\n              aria-label=\"delete button for search input\"\n              onClick={this.deleteSearch}\n            >\n              <TimesIcon />\n            </Button>\n          </InputGroup>\n        </ToolbarItem>\n        <ToolbarItem>\n          <Select\n            variant={SelectVariant.single}\n            aria-label=\"Select Input\"\n            onToggle={this.onGenderToggle}\n            onSelect={this.onGenderSelect}\n            selections={genderSelected}\n            isOpen={genderIsExpanded}\n          >\n            {this.genderSelectOptions.map((gender, index) => (\n              <SelectOption\n                isDisabled={gender.disabled}\n                isPlaceholder={gender.isPlaceholder}\n                key={index}\n                value={gender.value}\n              />\n            ))}\n          </Select>\n        </ToolbarItem>\n        <ToolbarItem variant=\"separator\" />\n        <ToolbarItem>\n          <Button variant=\"primary\" onClick={this.onClickAddCustomer}>\n            Add Customer\n          </Button>\n        </ToolbarItem>\n        <ToolbarItem variant=\"separator\" />\n        <ToolbarItem>\n          <Pagination\n            id={\"pagination\"}\n            itemCount={this.state.length}\n            widgetId=\"pagination-options-menu-top\"\n            perPage={this.state.perPage}\n            page={this.state.page}\n            variant={PaginationVariant.top}\n            onSetPage={this.onSetPage}\n            onPerPageSelect={this.onPerPageSelect}\n            isCompact\n          />\n        </ToolbarItem>\n      </React.Fragment>\n    );\n\n    const formContent = (\n      <Form isHorizontal>\n        <FormGroup label=\"First Name\" isRequired fieldId=\"horizontal-form-name\">\n          <TextInput\n            value={customerFirstNameValue}\n            isRequired\n            type=\"text\"\n            id=\"horizontal-form-name\"\n            aria-describedby=\"horizontal-form-name-helper\"\n            name=\"horizontal-form-name\"\n            onChange={this.handleCustomerFirstNameChange}\n          />\n        </FormGroup>\n        <FormGroup label=\"Last Name\" isRequired fieldId=\"horizontal-form-name\">\n          <TextInput\n            value={customerLastNameValue}\n            isRequired\n            type=\"text\"\n            id=\"horizontal-form-name\"\n            aria-describedby=\"horizontal-form-name-helper\"\n            name=\"horizontal-form-name\"\n            onChange={this.handleCustomerLastNameChange}\n          />\n        </FormGroup>\n        <FormGroup label=\"Username\" isRequired fieldId=\"horizontal-form-name\">\n          <TextInput\n            value={customerUsernameValue}\n            isRequired\n            type=\"text\"\n            id=\"horizontal-form-name\"\n            aria-describedby=\"horizontal-form-name-helper\"\n            name=\"horizontal-form-name\"\n            onChange={this.handleCustomerUsernameChange}\n          />\n        </FormGroup>\n        <FormGroup label=\"Password\" isRequired fieldId=\"horizontal-form-name\">\n          <TextInput\n            value={customerPasswordValue}\n            isRequired\n            type=\"password\"\n            id=\"horizontal-form-name\"\n            aria-describedby=\"horizontal-form-name-helper\"\n            name=\"horizontal-form-name\"\n            onChange={this.handleCustomerPasswordChange}\n          />\n        </FormGroup>\n        <FormGroup label=\"Date of birth\">\n          <DatePicker\n            value={customerDobValue}\n            onChange={this.handleCustomerDobChange}\n          />\n        </FormGroup>\n        <FormGroup label=\"Gender\" fieldId=\"horizontal-form-category\">\n          <FormSelect\n            value={customerGenderDrawerValue}\n            isRequired\n            onChange={this.handleCustomerGenderChange}\n            id=\"horzontal-form-category\"\n            name=\"horizontal-form-category\"\n          >\n            {this.genderDrawerOptions.map((option, index) => (\n              <FormSelectOption\n                isDisabled={option.disabled}\n                key={index}\n                value={option.value}\n                label={option.label}\n              />\n            ))}\n          </FormSelect>\n        </FormGroup>\n\n        <ActionGroup>{button}</ActionGroup>\n      </Form>\n    );\n\n    const panelContent = (\n      <DrawerPanelContent>\n        <DrawerHead>\n          <span tabIndex={isExpanded ? 0 : -1} ref={this.drawerRef}>\n            {formContent}\n          </span>\n          <DrawerActions>\n            <DrawerCloseButton onClick={this.onCloseClick} />\n          </DrawerActions>\n        </DrawerHead>\n      </DrawerPanelContent>\n    );\n\n    const drawerContent = (\n      <Table\n        aria-label=\"Sortable Table\"\n        sortBy={sortBy}\n        onSort={this.onSort}\n        cells={columns}\n        rows={customers.map((customer, index) => [\n          customer.first_name,\n          customer.last_name,\n          customer.username,\n          customer.dob,\n          customer.gender,\n        ])}\n      >\n        <TableHeader />\n        <TableBody onRowClick={this.onRowClick} />\n      </Table>\n    );\n\n    return (\n      <div>\n        <PageSection variant={PageSectionVariants.light}>\n          <TextContent>\n            <Text component=\"h1\">Customers</Text>\n            <Text component=\"p\">Shows every listed customer.</Text>\n          </TextContent>\n          <Toolbar id=\"toolbar\">\n            <ToolbarContent>{toolbarItems}</ToolbarContent>\n          </Toolbar>\n        </PageSection>\n        <PageSection>\n          <Drawer isExpanded={isExpanded} isInline onExpand={this.onExpand}>\n            <DrawerContent panelContent={panelContent}>\n              <DrawerContentBody>{drawerContent}</DrawerContentBody>\n            </DrawerContent>\n          </Drawer>\n        </PageSection>\n      </div>\n    );\n  }\n}\n\nexport default Customers;\n","import React, { Component } from \"react\";\nimport \"@patternfly/react-core/dist/styles/base.css\";\nimport \"@patternfly/patternfly/patternfly.css\";\n\nimport SearchIcon from \"@patternfly/react-icons/dist/js/icons/search-icon\";\nimport TimesIcon from \"@patternfly/react-icons/dist/js/icons/times-icon\";\n\nimport {\n  PageSection,\n  TextContent,\n  Text,\n  PageSectionVariants,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n  Button,\n  ButtonVariant,\n  InputGroup,\n  TextInput,\n  Pagination,\n  PaginationVariant,\n  Drawer,\n  DrawerPanelContent,\n  DrawerContent,\n  DrawerContentBody,\n  DrawerHead,\n  DrawerActions,\n  DrawerCloseButton,\n  Form,\n  FormGroup,\n  FormSelect,\n  FormSelectOption,\n  ActionGroup,\n  Select,\n  SelectVariant,\n  SelectOption,\n} from \"@patternfly/react-core\";\n\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  sortable,\n  SortByDirection,\n} from \"@patternfly/react-table\";\n\nimport axios from \"axios\";\n\nconst orderApi = axios.create({\n  baseURL: \"http://localhost:8080/order\",\n});\n\nconst articleApi = axios.create({\n  baseURL: \"http://localhost:8080/article\",\n});\n\nconst customerApi = axios.create({\n  baseURL: \"http://localhost:8080/customer\",\n});\n\nclass Orders extends Component {\n  constructor(props) {\n    super(props);\n    this.getLength();\n    this.getCustomers();\n    this.getArticles();\n\n    this.state = {\n      orders: [],\n      articles: [],\n      customers: [],\n      columns: [\n        { title: \"Shipping\", transforms: [sortable] },\n        { title: \"Notes\", transforms: [sortable] },\n        { title: \"Status\", transforms: [sortable] },\n        { title: \"Customer\", transforms: [sortable] },\n        { title: \"Articles\", transforms: [sortable] },\n      ],\n      orderArticleValue: [],\n\n      sortBy: {},\n      page: \"0\",\n      perPage: \"10\",\n      length: 0,\n      isExpanded: false,\n      drawerEdit: false,\n      searchValue: \"\",\n      statusIsExpanded: false,\n      statusSelected: null,\n      shippingIsExpanded: false,\n      shippingSelected: null,\n      isOpenOrderArticles: false,\n\n      orderIdValue: undefined,\n      orderNotesValue: \"\",\n      orderShippingDrawerValue: undefined,\n      orderStatusDrawerValue: undefined,\n      orderCustomerValue: null,\n    };\n\n    this.drawerRef = React.createRef();\n    this.onSort = this.onSort.bind(this);\n    this.onRowClick = this.onRowClick.bind(this);\n\n    this.handleOrderNotesChange = (orderNotesValue) => {\n      this.setState({ orderNotesValue });\n    };\n    this.handleOrderShippingChange = (orderShippingDrawerValue) => {\n      this.setState({ orderShippingDrawerValue });\n    };\n    this.handleOrderStatusChange = (orderStatusDrawerValue) => {\n      this.setState({ orderStatusDrawerValue });\n    };\n    this.handleOrderCustomerChange = (orderCustomerValue) => {\n      this.setState({ orderCustomerValue });\n    };\n\n    this.onToggleOrderArticles = (isOpenOrderArticles) => {\n      console.log(this.state.orderArticleValue);\n\n      this.setState({\n        isOpenOrderArticles,\n      });\n    };\n\n    this.onSelectOrderArticles = (event, selection) => {\n      const orderArticleValue = this.state.orderArticleValue;\n\n      if (orderArticleValue.includes(selection)) {\n        this.setState(\n          (prevState) => ({\n            orderArticleValue: prevState.orderArticleValue.filter(\n              (item) => item !== selection\n            ),\n          }),\n          () => console.log(\"selections: \", this.state.orderArticleValue)\n        );\n      } else {\n        this.setState(\n          (prevState) => ({\n            orderArticleValue: [...prevState.orderArticleValue, selection],\n          }),\n          () => console.log(\"selections: \", this.state.orderArticleValue)\n        );\n      }\n    };\n\n    this.clearSelectionOrderArticles = () => {\n      this.setState({\n        orderArticleValue: [],\n        isOpenOrderArticles: false,\n      });\n    };\n\n    this.statusDrawerOptions = [\n      { value: undefined, label: \"Please Choose\", disabled: false },\n      { value: 0, label: \"In Progress\", disabled: false },\n      { value: 1, label: \"Delivering\", disabled: false },\n      { value: 2, label: \"Delivered\", disabled: false },\n    ];\n\n    this.statusSelectOptions = [\n      { value: \"Status\", disabled: false, isPlaceholder: true },\n      { value: \"In Progress\", disabled: false },\n      { value: \"Delivering\", disabled: false },\n      { value: \"Delivered\", disabled: false },\n    ];\n\n    this.shippingDrawerOptions = [\n      { value: undefined, label: \"Please Choose\", disabled: false },\n      { value: 0, label: \"DHL\", disabled: false },\n      { value: 1, label: \"Hermes\", disabled: false },\n      { value: 2, label: \"DPD\", disabled: false },\n    ];\n\n    this.shippingSelectOptions = [\n      { value: \"Shipping\", disabled: false, isPlaceholder: true },\n      { value: \"DHL\", disabled: false },\n      { value: \"Hermes\", disabled: false },\n      { value: \"DPD\", disabled: false },\n    ];\n\n    this.onSetPage = (_event, value) => {\n      this.fetch(value - 1, this.state.perPage);\n      this.setState({\n        page: value,\n      });\n    };\n    this.onPerPageSelect = (_event, value) => {\n      this.setState({\n        perPage: value,\n      });\n      this.fetch(0, value);\n    };\n\n    this.onExpand = () => {\n      this.drawerRef.current && this.drawerRef.current.focus();\n    };\n\n    this.onClickAddOrder = () => {\n      const isExpanded = !this.state.isExpanded;\n      this.setState({\n        drawerEdit: false,\n        isExpanded,\n      });\n    };\n\n    this.onCloseClick = () => {\n      this.setState({\n        isExpanded: false,\n        orderNotesValue: \"\",\n        orderArticleValue: [],\n        orderCustomerValue: undefined,\n        orderShippingDrawerValue: undefined,\n        orderStatusDrawerValue: undefined,\n      });\n    };\n\n    this.onSearchValueChange = (inputValue) => {\n      this.setState({\n        searchValue: inputValue,\n      });\n    };\n\n    this.onShippingToggle = (isExpanded) => {\n      this.setState({\n        shippingIsExpanded: isExpanded,\n      });\n    };\n\n    this.onShippingSelect = (event, selection, isPlaceholder) => {\n      if (isPlaceholder) this.clearShippingSelection();\n      this.setState(\n        {\n          shippingSelected: selection,\n          shippingIsExpanded: false,\n        },\n        function () {\n          this.search();\n        }\n      );\n    };\n\n    this.clearShippingSelection = () => {\n      this.setState({\n        shippingSelected: null,\n        shippingIsExpanded: false,\n      });\n      this.fetch(this.state.page, this.state.perPageParameter);\n    };\n\n    this.onStatusToggle = (isExpanded) => {\n      this.setState({\n        statusIsExpanded: isExpanded,\n      });\n    };\n\n    this.onStatusSelect = (event, selection, isPlaceholder) => {\n      if (isPlaceholder) this.clearStatusSelection();\n      this.setState(\n        {\n          statusSelected: selection,\n          statusIsExpanded: false,\n        },\n        function () {\n          this.search();\n        }\n      );\n    };\n\n    this.clearStatusSelection = () => {\n      this.setState({\n        statusSelected: null,\n        statusIsExpanded: false,\n      });\n      this.fetch(this.state.page, this.state.perPageParameter);\n    };\n  }\n\n  getLength = () => {\n    orderApi.get(\"/length\").then((res) => {\n      this.setState({ length: res.data });\n    });\n  };\n\n  getCustomers = () => {\n    customerApi.get(\"/\").then((res) => {\n      this.setState({ customers: res.data });\n    });\n  };\n\n  getArticles = () => {\n    articleApi.get(\"/\").then((res) => {\n      this.setState({ articles: res.data });\n    });\n  };\n\n  fetch = (pageParameter, perPageParameter) => {\n    const params = {\n      page: pageParameter,\n      size: perPageParameter,\n    };\n\n    orderApi.get(\"/paginated\", { params }).then((res) => {\n      this.setState({ orders: res.data });\n    });\n  };\n\n  post = () => {\n    const orderArticleValueIds = this.state.orderArticleValue\n      .map((article) =>\n        this.state.articles.find((item) => {\n          return item.name === article;\n        })\n      )\n      .map((article) => {\n        return { id: article.id };\n      });\n\n    orderApi.post(\"/\", {\n      shipping: this.state.orderShippingDrawerValue,\n      notes: this.state.orderNotesValue,\n      status: this.state.orderStatusDrawerValue,\n      customer: { id: this.state.orderCustomerValue },\n      articles: orderArticleValueIds,\n    });\n\n    this.setState({\n      isExpanded: false,\n      orderNotesValue: \"\",\n      orderCustomerValue: undefined,\n      orderArticleValue: [],\n      page: \"0\",\n      perPage: \"10\",\n      orderShippingDrawerValue: undefined,\n      orderIdValue: undefined,\n      orderStatusDrawerValue: undefined,\n    });\n  };\n\n  update = () => {\n    const orderArticleValueIds = this.state.orderArticleValue\n      .map((article) =>\n        this.state.articles.find((item) => {\n          return item.name === article;\n        })\n      )\n      .map((article) => {\n        return { id: article.id };\n      });\n\n    orderApi.put(\"/\" + this.state.orderIdValue, {\n      shipping: this.state.orderShippingDrawerValue,\n      notes: this.state.orderNotesValue,\n      status: this.state.orderStatusDrawerValue,\n      customer: { id: this.state.orderCustomerValue },\n      articles: orderArticleValueIds,\n    });\n\n    this.setState({\n      isExpanded: false,\n      orderNotesValue: \"\",\n      orderCustomerValue: \"\",\n      orderArticleValue: [],\n      page: \"0\",\n      perPage: \"10\",\n      orderShippingDrawerValue: undefined,\n      orderIdValue: undefined,\n      orderStatusDrawerValue: undefined,\n    });\n  };\n\n  delete = () => {\n    orderApi.delete(\"/\" + this.state.orderIdValue);\n\n    this.setState({\n      isExpanded: false,\n      orderNotesValue: \"\",\n      orderCustomerValue: \"\",\n      orderArticleValue: [],\n      page: \"0\",\n      perPage: \"10\",\n      orderShippingDrawerValue: undefined,\n      orderIdValue: undefined,\n      orderStatusDrawerValue: undefined,\n    });\n  };\n\n  search = () => {\n    const params = {\n      search: this.state.searchValue,\n      statusFilter: this.state.statusSelected,\n      shippingFilter: this.state.shippingSelected,\n    };\n    orderApi.get(\"/search\", { params }).then((res) => {\n      this.setState({ orders: res.data });\n    });\n  };\n\n  deleteSearch = () => {\n    this.setState({ searchValue: \"\" });\n    this.fetch(this.state.page, this.state.perPage);\n  };\n\n  componentDidMount() {\n    this.fetch(\"0\", \"10\");\n  }\n\n  onSort(_event, index, direction) {\n    const sortedRows = this.state.customers.sort((a, b) =>\n      a[index] < b[index] ? -1 : a[index] > b[index] ? 1 : 0\n    );\n    this.setState({\n      sortBy: {\n        index,\n        direction,\n      },\n      customers:\n        direction === SortByDirection.asc ? sortedRows : sortedRows.reverse(),\n    });\n  }\n\n  onRowClick(_event, row) {\n    const order = this.state.orders[row.secretTableRowKeyId];\n\n    switch (order.status) {\n      case \"INPROGRESS\":\n        this.setState({ orderStatusDrawerValue: 0 });\n        break;\n      case \"DELIVERING\":\n        this.setState({ orderStatusDrawerValue: 1 });\n        break;\n      case \"DELIVERED\":\n        this.setState({ orderStatusDrawerValue: 2 });\n        break;\n      default:\n        this.setState({ orderStatusDrawerValue: undefined });\n        break;\n    }\n\n    switch (order.shipping) {\n      case \"DHL\":\n        this.setState({ orderShippingDrawerValue: 0 });\n        break;\n      case \"HERMES\":\n        this.setState({ orderShippingDrawerValue: 1 });\n        break;\n      case \"DPD\":\n        this.setState({ orderShippingDrawerValue: 2 });\n        break;\n      default:\n        this.setState({ orderShippingDrawerValue: undefined });\n        break;\n    }\n\n    this.setState({\n      drawerEdit: true,\n      isExpanded: true,\n      orderNotesValue: order.notes,\n      orderCustomerValue: order.customer.id,\n      orderArticleValue: order.articles.map((article) => article.name),\n      orderIdValue: order.id,\n    });\n  }\n\n  render() {\n    const {\n      columns,\n      orders,\n      sortBy,\n      isExpanded,\n      orderNotesValue,\n      orderShippingDrawerValue,\n      orderStatusDrawerValue,\n      orderCustomerValue,\n      orderArticleValue,\n      drawerEdit,\n      shippingIsExpanded,\n      shippingSelected,\n      statusIsExpanded,\n      statusSelected,\n      isOpenOrderArticles,\n    } = this.state;\n\n    let button;\n\n    if (!drawerEdit) {\n      button = (\n        <Button variant=\"primary\" onClick={this.post}>\n          Add order\n        </Button>\n      );\n    } else {\n      button = (\n        <div>\n          <Button variant=\"primary\" onClick={this.update}>\n            Edit order\n          </Button>\n          <Button variant=\"danger\" onClick={this.delete} id=\"deleteButton\">\n            Delete order\n          </Button>\n        </div>\n      );\n    }\n\n    let customerDrawerOptions = this.state.customers.map((customer) => {\n      const container = {};\n\n      container.value = customer.id;\n      container.label = customer.first_name.concat(\" \", customer.last_name);\n\n      return container;\n    });\n\n    let articleDrawerOptions = this.state.articles.map((article) => {\n      const container = {};\n\n      container.id = article.id;\n      container.value = article.name;\n      container.description = article.description;\n      container.disabled = false;\n\n      return container;\n    });\n\n    const toolbarItems = (\n      <React.Fragment>\n        <ToolbarItem>\n          <InputGroup>\n            <TextInput\n              name=\"textInput1\"\n              id=\"textInput1\"\n              type=\"search\"\n              aria-label=\"search input example\"\n              onChange={this.onSearchValueChange}\n              value={this.state.searchValue}\n            />\n            <Button\n              variant={ButtonVariant.control}\n              aria-label=\"search button for search input\"\n              onClick={this.search}\n            >\n              <SearchIcon />\n            </Button>\n            <Button\n              variant={ButtonVariant.control}\n              aria-label=\"delete button for search input\"\n              onClick={this.deleteSearch}\n            >\n              <TimesIcon />\n            </Button>\n          </InputGroup>\n        </ToolbarItem>\n        <ToolbarItem>\n          <Select\n            variant={SelectVariant.single}\n            aria-label=\"Select Input\"\n            onToggle={this.onStatusToggle}\n            onSelect={this.onStatusSelect}\n            selections={statusSelected}\n            isOpen={statusIsExpanded}\n          >\n            {this.statusSelectOptions.map((status, index) => (\n              <SelectOption\n                isDisabled={status.disabled}\n                isPlaceholder={status.isPlaceholder}\n                key={index}\n                value={status.value}\n              />\n            ))}\n          </Select>\n        </ToolbarItem>\n        <ToolbarItem>\n          <Select\n            variant={SelectVariant.single}\n            aria-label=\"Select Input\"\n            onToggle={this.onShippingToggle}\n            onSelect={this.onShippingSelect}\n            selections={shippingSelected}\n            isOpen={shippingIsExpanded}\n          >\n            {this.shippingSelectOptions.map((shipping, index) => (\n              <SelectOption\n                isDisabled={shipping.disabled}\n                isPlaceholder={shipping.isPlaceholder}\n                key={index}\n                value={shipping.value}\n              />\n            ))}\n          </Select>\n        </ToolbarItem>\n        <ToolbarItem variant=\"separator\" />\n        <ToolbarItem>\n          <Button variant=\"primary\" onClick={this.onClickAddOrder}>\n            Add Order\n          </Button>\n        </ToolbarItem>\n        <ToolbarItem variant=\"separator\" />\n        <ToolbarItem>\n          <Pagination\n            id={\"pagination\"}\n            itemCount={this.state.length}\n            widgetId=\"pagination-options-menu-top\"\n            perPage={this.state.perPage}\n            page={this.state.page}\n            variant={PaginationVariant.top}\n            onSetPage={this.onSetPage}\n            onPerPageSelect={this.onPerPageSelect}\n            isCompact\n          />\n        </ToolbarItem>\n      </React.Fragment>\n    );\n\n    const formContent = (\n      <Form isHorizontal>\n        <FormGroup label=\"Notes\" isRequired fieldId=\"horizontal-form-name\">\n          <TextInput\n            value={orderNotesValue}\n            isRequired\n            type=\"text\"\n            id=\"horizontal-form-name\"\n            aria-describedby=\"horizontal-form-name-helper\"\n            name=\"horizontal-form-name\"\n            onChange={this.handleOrderNotesChange}\n          />\n        </FormGroup>\n\n        <FormGroup label=\"Shipping\" fieldId=\"horizontal-form-category\">\n          <FormSelect\n            value={orderShippingDrawerValue}\n            isRequired\n            onChange={this.handleOrderShippingChange}\n            id=\"horzontal-form-category\"\n            name=\"horizontal-form-category\"\n          >\n            {this.shippingDrawerOptions.map((option, index) => (\n              <FormSelectOption\n                isDisabled={option.disabled}\n                key={index}\n                value={option.value}\n                label={option.label}\n              />\n            ))}\n          </FormSelect>\n        </FormGroup>\n\n        <FormGroup label=\"Status\" fieldId=\"horizontal-form-category\">\n          <FormSelect\n            value={orderStatusDrawerValue}\n            isRequired\n            onChange={this.handleOrderStatusChange}\n            id=\"horzontal-form-category\"\n            name=\"horizontal-form-category\"\n          >\n            {this.statusDrawerOptions.map((option, index) => (\n              <FormSelectOption\n                isDisabled={option.disabled}\n                key={index}\n                value={option.value}\n                label={option.label}\n              />\n            ))}\n          </FormSelect>\n        </FormGroup>\n\n        <FormGroup label=\"Customer\" fieldId=\"horizontal-form-customer\">\n          <FormSelect\n            value={orderCustomerValue}\n            isRequired\n            onChange={this.handleOrderCustomerChange}\n            id=\"horzontal-form-customer\"\n            name=\"horizontal-form-customer\"\n          >\n            {customerDrawerOptions.map((customer, index) => (\n              <FormSelectOption\n                isDisabled={customer.disabled}\n                key={index}\n                value={customer.value}\n                label={customer.label}\n              />\n            ))}\n          </FormSelect>\n        </FormGroup>\n\n        <FormGroup label=\"Articles\" fieldId=\"horizontal-form-articles\">\n          <Select\n            variant={SelectVariant.typeaheadMulti}\n            typeAheadAriaLabel=\"Select articles\"\n            onToggle={this.onToggleOrderArticles}\n            onSelect={this.onSelectOrderArticles}\n            onClear={this.clearSelectionOrderArticles}\n            selections={orderArticleValue}\n            isOpen={isOpenOrderArticles}\n            aria-labelledby=\"multi-typeahead-select-id-1\"\n            placeholderText=\"Select articles\"\n          >\n            {articleDrawerOptions.map((article, index) => (\n              <SelectOption\n                isDisabled={article.disabled}\n                key={article.id}\n                value={article.value}\n                {...(article.description && {\n                  description: article.description,\n                })}\n              />\n            ))}\n          </Select>\n        </FormGroup>\n\n        <ActionGroup>{button}</ActionGroup>\n      </Form>\n    );\n\n    const panelContent = (\n      <DrawerPanelContent>\n        <DrawerHead>\n          <span tabIndex={isExpanded ? 0 : -1} ref={this.drawerRef}>\n            {formContent}\n          </span>\n          <DrawerActions>\n            <DrawerCloseButton onClick={this.onCloseClick} />\n          </DrawerActions>\n        </DrawerHead>\n      </DrawerPanelContent>\n    );\n\n    const drawerContent = (\n      <Table\n        aria-label=\"Sortable Table\"\n        sortBy={sortBy}\n        onSort={this.onSort}\n        cells={columns}\n        rows={orders.map((order, index) => [\n          order.shipping,\n          order.notes,\n          order.status,\n          order.customer.first_name.concat(\" \", order.customer.last_name),\n          order.articles\n            .map(function (e) {\n              return e.name;\n            })\n            .join(\", \"),\n        ])}\n      >\n        <TableHeader />\n        <TableBody onRowClick={this.onRowClick} />\n      </Table>\n    );\n\n    return (\n      <div>\n        <PageSection variant={PageSectionVariants.light}>\n          <TextContent>\n            <Text component=\"h1\">Orders</Text>\n            <Text component=\"p\">Shows every listed order.</Text>\n          </TextContent>\n          <Toolbar id=\"toolbar\">\n            <ToolbarContent>{toolbarItems}</ToolbarContent>\n          </Toolbar>\n        </PageSection>\n        <PageSection>\n          <Drawer isExpanded={isExpanded} isInline onExpand={this.onExpand}>\n            <DrawerContent panelContent={panelContent}>\n              <DrawerContentBody>{drawerContent}</DrawerContentBody>\n            </DrawerContent>\n          </Drawer>\n        </PageSection>\n      </div>\n    );\n  }\n}\n\nexport default Orders;\n","import React from \"react\";\nimport \"@patternfly/react-core/dist/styles/base.css\";\nimport \"@patternfly/patternfly/patternfly.css\";\nimport Navigation from \"./Navigation\";\nimport { BrowserRouter as Router, Switch, Link, Route } from \"react-router-dom\";\n\nimport Home from \"./Home\";\nimport Articles from \"./Articles\";\nimport Customers from \"./Customers\";\nimport Orders from \"./Orders\";\n\nimport \"./stylesheet.css\";\n\nimport {\n  Page,\n  PageHeader,\n  PageHeaderTools,\n  PageSidebar,\n  PageSection,\n  PageSectionVariants,\n  Tooltip,\n} from \"@patternfly/react-core\";\n\nimport OutlinedQuestionCircleIcon from \"@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon\";\n\nclass PageComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: false,\n    };\n    this.onNavToggle = () => {\n      this.setState({\n        isNavOpen: !this.state.isNavOpen,\n      });\n    };\n  }\n\n  render() {\n    const { isNavOpen } = this.state;\n\n    const Header = (\n      <PageHeader\n        logo={\n          <Link to=\"/\" className=\"webshopLink\">\n            Webshop\n          </Link>\n        }\n        headerTools={\n          <PageHeaderTools>\n            <Tooltip\n              position=\"left\"\n              enableFlip={false}\n              content={\n                <div className=\"pageHeaderTools\">\n                  This feature has not yet been implemented. However, Basic Auth\n                  by directly calling the API is already possible. Comment the\n                  security-related lines in the application.properties and\n                  Customer.java file and you are ready to go!{\" \"}\n                </div>\n              }\n            >\n              <span aria-label=\"tooltip\" className=\"tooltip\" tabIndex=\"0\">\n                <OutlinedQuestionCircleIcon />\n              </span>\n            </Tooltip>\n            Sign-In\n          </PageHeaderTools>\n        }\n        showNavToggle\n        isNavOpen={isNavOpen}\n        onNavToggle={this.onNavToggle}\n      />\n    );\n    const Sidebar = <PageSidebar nav={<Navigation />} isNavOpen={isNavOpen} />;\n\n    return (\n      <Router>\n        <Page header={Header} sidebar={Sidebar} id=\"page\">\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/orders\" component={Orders} />\n            <Route path=\"/articles\" component={Articles} />\n          </Switch>\n        </Page>\n      </Router>\n    );\n  }\n}\n\nexport default PageComponent;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport PageComponent from \"./components/PageComponent\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PageComponent />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"@patternfly/patternfly/patternfly.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}