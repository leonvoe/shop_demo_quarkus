{"version":3,"sources":["logo.svg","test.jsx","components/Navigation.jsx","components/Home.jsx","components/Articles.jsx","components/Customers.jsx","components/Orders.jsx","components/PageComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["React","Component","Navigation","props","state","activeItem","onSelect","result","setState","itemId","this","Nav","aria-label","NavList","NavItem","id","isActive","to","Home","PageSection","variant","PageSectionVariants","light","TextContent","Text","component","api","axios","create","baseURL","Articles","_isMounted","getLength","get","then","res","length","data","fetch","pageParameter","perPageParameter","params","page","size","articles","post","name","articleNameValue","description","articleDescriptionValue","category","articleCategoryDrawerValue","isExpanded","perPage","undefined","articleIdValue","update","put","delete","search","searchValue","filter","categorySelected","deleteSearch","columns","title","transforms","sortable","sortBy","drawerEdit","categoryIsExpanded","drawerRef","createRef","onSort","bind","onRowClick","handleArticleCategoryChange","handleArticleNameChange","handleArticleDescriptionChange","categoryDrawerOptions","value","label","disabled","categorySelectOptions","isPlaceholder","onSetPage","_event","onPerPageSelect","onExpand","current","focus","onClickAddArticle","onCloseClick","onSearchValueChange","inputValue","onCategoryToggle","onCategorySelect","event","selection","console","log","clearCategorySelection","index","direction","sortedRows","sort","a","b","SortByDirection","asc","reverse","row","article","secretTableRowKeyId","button","Button","onClick","toolbarItems","Fragment","ToolbarItem","InputGroup","TextInput","type","onChange","ButtonVariant","control","Select","SelectVariant","single","onToggle","selections","isOpen","map","SelectOption","isDisabled","aria-expanded","Pagination","itemCount","widgetId","PaginationVariant","top","isCompact","formContent","Form","isHorizontal","FormGroup","isRequired","fieldId","aria-describedby","TextArea","FormSelect","option","FormSelectOption","ActionGroup","panelContent","DrawerPanelContent","DrawerHead","tabIndex","ref","DrawerActions","DrawerCloseButton","drawerContent","Table","cells","rows","Toolbar","ToolbarContent","Drawer","isInline","DrawerContent","DrawerContentBody","Customers","customers","first_name","customerFirstNameValue","last_name","customerLastNameValue","username","customerUsernameValue","password","customerPasswordValue","dob","customerDobValue","gender","customerGenderDrawerValue","customerIdValue","genderSelected","genderIsExpanded","handleCustomerFirstNameChange","handleCustomerLastNameChange","handleCustomerUsernameChange","handleCustomerPasswordChange","handleCustomerDobChange","handleCustomerGenderChange","genderDrawerOptions","genderSelectOptions","onClickAddCustomer","onGenderToggle","onGenderSelect","clearGenderSelection","customer","DatePicker","orderApi","articleApi","customerApi","Orders","getCustomers","getArticles","orders","orderArticleValueIds","orderArticleValue","find","item","shipping","orderShippingDrawerValue","notes","orderNotesValue","status","orderStatusDrawerValue","orderCustomerValue","orderIdValue","statusFilter","statusSelected","shippingFilter","shippingSelected","statusIsExpanded","shippingIsExpanded","isOpenOrderArticles","handleOrderNotesChange","handleOrderShippingChange","handleOrderStatusChange","handleOrderCustomerChange","onToggleOrderArticles","onSelectOrderArticles","includes","prevState","clearSelectionOrderArticles","statusDrawerOptions","statusSelectOptions","shippingDrawerOptions","shippingSelectOptions","onClickAddOrder","onShippingToggle","onShippingSelect","clearShippingSelection","onStatusToggle","onStatusSelect","clearStatusSelection","order","customerDrawerOptions","container","concat","articleDrawerOptions","typeaheadMulti","typeAheadAriaLabel","onClear","aria-labelledby","placeholderText","e","join","PageComponent","isNavOpen","onNavToggle","Header","PageHeader","logo","className","headerTools","PageHeaderTools","Tooltip","position","enableFlip","content","showNavToggle","Sidebar","PageSidebar","nav","Page","header","sidebar","path","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94862d0e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport {\n  Avatar,\n  Brand,\n  Bullseye,\n  Button,\n  ButtonVariant,\n  Card,\n  CardHeader,\n  CardActions,\n  CardTitle,\n  CardBody,\n  Checkbox,\n  Dropdown,\n  DropdownGroup,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  DropdownPosition,\n  DropdownDirection,\n  DropdownToggleCheckbox,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  EmptyStateSecondaryActions,\n  Gallery,\n  GalleryItem,\n  KebabToggle,\n  Nav,\n  NavItem,\n  NavList,\n  OverflowMenu,\n  OverflowMenuControl,\n  OverflowMenuDropdownItem,\n  OverflowMenuItem,\n  Page,\n  PageHeader,\n  PageHeaderTools,\n  PageHeaderToolsGroup,\n  PageHeaderToolsItem,\n  PageSection,\n  PageSectionVariants,\n  PageSidebar,\n  Pagination,\n  Select,\n  SelectOption,\n  SkipToContent,\n  TextContent,\n  Text,\n  Title,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n  ToolbarFilter,\n  ToolbarContent,\n  ToolbarToggleGroup,\n} from \"@patternfly/react-core\";\nimport BellIcon from \"@patternfly/react-icons/dist/js/icons/bell-icon\";\nimport CogIcon from \"@patternfly/react-icons/dist/js/icons/cog-icon\";\nimport FilterIcon from \"@patternfly/react-icons/dist/js/icons/filter-icon\";\nimport TrashIcon from \"@patternfly/react-icons/dist/js/icons/trash-icon\";\nimport HelpIcon from \"@patternfly/react-icons/dist/js/icons/help-icon\";\nimport PlusCircleIcon from \"@patternfly/react-icons/dist/js/icons/plus-circle-icon\";\nimport imgBrand from \"@patternfly/react-core/src/components/Brand/examples/pfLogo.svg\";\nimport imgAvatar from \"@patternfly/react-core/src/components/Avatar/examples/avatarImg.svg\";\n\nclass test extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n\n    this.state = {\n      filters: {\n        products: [],\n      },\n      res: [],\n      selectedItems: [],\n      areAllSelected: false,\n      itemsCheckedByDefault: false,\n      isUpperToolbarDropdownOpen: false,\n      isUpperToolbarKebabDropdownOpen: false,\n      isLowerToolbarDropdownOpen: false,\n      isLowerToolbarKebabDropdownOpen: false,\n      isCardKebabDropdownOpen: false,\n      activeItem: 0,\n      splitButtonDropdownIsOpen: false,\n      page: 1,\n      perPage: 10,\n      totalItemCount: 10,\n    };\n\n    this.onPageDropdownToggle = (isUpperToolbarDropdownOpen) => {\n      this.setState({\n        isUpperToolbarDropdownOpen,\n      });\n    };\n\n    this.onPageDropdownSelect = (event) => {\n      this.setState({\n        isUpperToolbarDropdownOpen: !this.state.isUpperToolbarDropdownOpen,\n      });\n    };\n\n    this.onPageToolbarDropdownToggle = (isPageToolbarDropdownOpen) => {\n      this.setState({\n        isPageToolbarDropdownOpen,\n      });\n    };\n\n    this.onPageToolbarKebabDropdownToggle = (\n      isUpperToolbarKebabDropdownOpen\n    ) => {\n      this.setState({\n        isUpperToolbarKebabDropdownOpen,\n      });\n    };\n\n    this.onToolbarDropdownToggle = (isLowerToolbarDropdownOpen) => {\n      this.setState((prevState) => ({\n        isLowerToolbarDropdownOpen,\n      }));\n    };\n\n    this.onToolbarDropdownSelect = (event) => {\n      this.setState({\n        isLowerToolbarDropdownOpen: !this.state.isLowerToolbarDropdownOpen,\n      });\n    };\n\n    this.onToolbarKebabDropdownToggle = (isLowerToolbarKebabDropdownOpen) => {\n      this.setState({\n        isLowerToolbarKebabDropdownOpen,\n      });\n    };\n\n    this.onToolbarKebabDropdownSelect = (event) => {\n      this.setState({\n        isLowerToolbarKebabDropdownOpen: !this.state\n          .isLowerToolbarKebabDropdownOpen,\n      });\n    };\n\n    this.onCardKebabDropdownToggle = (key, isCardKebabDropdownOpen) => {\n      this.setState({\n        [key]: isCardKebabDropdownOpen,\n      });\n    };\n\n    this.onCardKebabDropdownSelect = (key, event) => {\n      this.setState({\n        [key]: !this.state[key],\n      });\n    };\n\n    this.onNavSelect = (result) => {\n      this.setState({\n        activeItem: result.itemId,\n      });\n    };\n\n    this.deleteItem = (item) => (event) => {\n      const filter = (getter) => (val) => getter(val) !== item.id;\n      this.setState({\n        res: this.state.res.filter(filter(({ id }) => id)),\n        selectedItems: this.state.selectedItems.filter(filter((id) => id)),\n      });\n    };\n\n    this.onSetPage = (_event, pageNumber) => {\n      this.setState({\n        page: pageNumber,\n      });\n    };\n\n    this.onPerPageSelect = (_event, perPage) => {\n      this.setState({\n        perPage,\n      });\n    };\n\n    this.onSplitButtonToggle = (isOpen) => {\n      this.setState({\n        splitButtonDropdownIsOpen: isOpen,\n      });\n    };\n\n    this.onSplitButtonSelect = (event) => {\n      this.setState((prevState, props) => {\n        return {\n          splitButtonDropdownIsOpen: !prevState.splitButtonDropdownIsOpen,\n        };\n      });\n    };\n\n    this.onNameSelect = (event, selection) => {\n      const checked = event.target.checked;\n      this.setState((prevState) => {\n        const prevSelections = prevState.filters[\"products\"];\n        return {\n          filters: {\n            ...prevState.filters,\n            [\"products\"]: checked\n              ? [...prevSelections, selection]\n              : prevSelections.filter((value) => value !== selection),\n          },\n        };\n      });\n    };\n\n    this.onDelete = (type = \"\", id = \"\") => {\n      if (type) {\n        this.setState((prevState) => {\n          prevState.filters[type.toLowerCase()] = prevState.filters[\n            type.toLowerCase()\n          ].filter((s) => s !== id);\n          return {\n            filters: prevState.filters,\n          };\n        });\n      } else {\n        this.setState({\n          filters: {\n            products: [],\n          },\n        });\n      }\n    };\n  }\n\n  selectedItems(e) {\n    const { value, checked } = e.target;\n    let { selectedItems } = this.state;\n\n    if (checked) {\n      selectedItems = [...selectedItems, value];\n    } else {\n      selectedItems = selectedItems.filter((el) => el !== value);\n      if (this.state.areAllSelected) {\n        this.setState({\n          areAllSelected: !this.state.areAllSelected,\n        });\n      }\n    }\n    this.setState({ selectedItems });\n  }\n\n  splitCheckboxSelectAll(e) {\n    const { checked } = e.target;\n    const { isChecked, res } = this.state;\n    let collection = [];\n\n    if (checked) {\n      for (var i = 0; i <= 9; i++) collection = [...collection, i];\n    }\n\n    this.setState(\n      {\n        selectedItems: collection,\n        isChecked: isChecked,\n        areAllSelected: checked,\n      },\n      this.updateSelected\n    );\n  }\n\n  selectPage(e) {\n    const { checked } = e.target;\n    const { isChecked, totalItemCount, perPage } = this.state;\n    let collection = [];\n\n    collection = this.getAllItems();\n\n    this.setState(\n      {\n        selectedItems: collection,\n        isChecked: checked,\n        areAllSelected: totalItemCount === perPage ? true : false,\n      },\n      this.updateSelected\n    );\n  }\n\n  selectAll(e) {\n    const { checked } = e.target;\n    const { isChecked } = this.state;\n\n    let collection = [];\n    for (var i = 0; i <= 9; i++) collection = [...collection, i];\n\n    this.setState(\n      {\n        selectedItems: collection,\n        isChecked: true,\n        areAllSelected: true,\n      },\n      this.updateSelected\n    );\n  }\n\n  selectNone(e) {\n    const { checked } = e.target;\n    const { isChecked, selectedItems } = this.state;\n    this.setState(\n      {\n        selectedItems: [],\n        isChecked: false,\n        areAllSelected: false,\n      },\n      this.updateSelected\n    );\n  }\n\n  getAllItems() {\n    const { res } = this.state;\n    const collection = [];\n    for (const items of res) {\n      collection.push(items.id);\n    }\n\n    return collection;\n  }\n\n  handleCheckboxClick(checked, e) {\n    const { value } = e.target;\n    const { totalItemCount } = this.state;\n\n    if (checked) {\n      const collection = this.getAllItems();\n      this.setState((prevState) => ({\n        selectedItems: [...prevState.selectedItems, value * 1],\n        areAllSelected: totalItemCount === prevState.selectedItems.length + 1,\n      }));\n    } else {\n      this.setState((prevState) => ({\n        selectedItems: prevState.selectedItems.filter((item) => item != value),\n        areAllSelected: false,\n      }));\n    }\n  }\n\n  updateSelected() {\n    const { res, selectedItems } = this.state;\n    let rows = res.map((post) => {\n      post.selected = selectedItems.includes(post.id);\n      return post;\n    });\n\n    this.setState({\n      res: rows,\n    });\n  }\n\n  fetch(page, perPage) {\n    fetch(\n      `https://my-json-server.typicode.com/jenny-s51/cardviewdata/posts?_page=${page}&_limit=${perPage}`\n    )\n      .then((resp) => resp.json())\n      .then((resp) => this.setState({ res: resp, perPage, page }))\n      .then(() => this.updateSelected())\n      .catch((err) => this.setState({ error: err }));\n  }\n\n  componentDidMount() {\n    this.fetch(this.state.page, this.state.perPage);\n  }\n\n  renderPagination() {\n    const { page, perPage, totalItemCount } = this.state;\n\n    const defaultPerPageOptions = [\n      {\n        title: \"1\",\n        value: 1,\n      },\n      {\n        title: \"5\",\n        value: 5,\n      },\n      {\n        title: \"10\",\n        value: 10,\n      },\n    ];\n\n    return (\n      <Pagination\n        itemCount={totalItemCount}\n        page={page}\n        perPage={perPage}\n        perPageOptions={defaultPerPageOptions}\n        onSetPage={(_evt, value) => {\n          this.fetch(value, perPage);\n        }}\n        onPerPageSelect={(_evt, value) => {\n          this.fetch(1, value);\n        }}\n        variant=\"top\"\n        isCompact\n      />\n    );\n  }\n\n  buildSelectDropdown() {\n    const {\n      splitButtonDropdownIsOpen,\n      selectedItems,\n      areAllSelected,\n    } = this.state;\n    const numSelected = selectedItems.length;\n    const allSelected = areAllSelected;\n    const anySelected = numSelected > 0;\n    const someChecked = anySelected ? null : false;\n    const isChecked = allSelected ? true : someChecked;\n    const splitButtonDropdownItems = [\n      <DropdownItem key=\"item-1\" onClick={this.selectNone.bind(this)}>\n        Select none (0 items)\n      </DropdownItem>,\n      <DropdownItem key=\"item-2\" onClick={this.selectPage.bind(this)}>\n        Select page ({this.state.perPage} items)\n      </DropdownItem>,\n      <DropdownItem key=\"item-3\" onClick={this.selectAll.bind(this)}>\n        Select all ({this.state.totalItemCount} items)\n      </DropdownItem>,\n    ];\n\n    return (\n      <Dropdown\n        position={DropdownPosition.left}\n        onSelect={this.onSplitButtonSelect}\n        toggle={\n          <DropdownToggle\n            splitButtonItems={[\n              <DropdownToggleCheckbox\n                id=\"example-checkbox-2\"\n                key=\"split-checkbox\"\n                aria-label={anySelected ? \"Deselect all\" : \"Select all\"}\n                isChecked={areAllSelected}\n                onClick={this.splitCheckboxSelectAll.bind(this)}\n              ></DropdownToggleCheckbox>,\n            ]}\n            onToggle={this.onSplitButtonToggle}\n          >\n            {numSelected !== 0 && (\n              <React.Fragment>{numSelected} selected</React.Fragment>\n            )}\n          </DropdownToggle>\n        }\n        isOpen={splitButtonDropdownIsOpen}\n        dropdownItems={splitButtonDropdownItems}\n      />\n    );\n  }\n\n  buildFilterDropdown() {\n    const { isLowerToolbarDropdownOpen, filters } = this.state;\n\n    const filterDropdownItems = [\n      <SelectOption key=\"patternfly\" value=\"Patternfly\" />,\n      <SelectOption key=\"activemq\" value=\"ActiveMQ\" />,\n      <SelectOption key=\"apachespark\" value=\"Apache Spark\" />,\n      <SelectOption key=\"avro\" value=\"Avro\" />,\n      <SelectOption key=\"azureservices\" value=\"Azure Services\" />,\n      <SelectOption key=\"crypto\" value=\"Crypto\" />,\n      <SelectOption key=\"dropbox\" value=\"DropBox\" />,\n      <SelectOption key=\"jbossdatagrid\" value=\"JBoss Data Grid\" />,\n      <SelectOption key=\"rest\" value=\"REST\" />,\n      <SelectOption key=\"swagger\" value=\"SWAGGER\" />,\n    ];\n\n    return (\n      <ToolbarFilter\n        categoryName=\"Products\"\n        chips={filters.products}\n        deleteChip={this.onDelete}\n      >\n        <Select\n          aria-label=\"Products\"\n          onToggle={this.onToolbarDropdownToggle}\n          onSelect={this.onNameSelect}\n          selections={filters.products}\n          isExpanded={isLowerToolbarDropdownOpen}\n          placeholderText=\"Creator\"\n        >\n          {filterDropdownItems}\n        </Select>\n      </ToolbarFilter>\n    );\n  }\n\n  render() {\n    const {\n      isUpperToolbarDropdownOpen,\n      isLowerToolbarDropdownOpen,\n      isUpperToolbarKebabDropdownOpen,\n      isLowerToolbarKebabDropdownOpen,\n      isCardKebabDropdownOpen,\n      splitButtonDropdownIsOpen,\n      activeItem,\n      filters,\n      res,\n      checked,\n      selectedItems,\n      itemsCheckedByDefault,\n      areAllSelected,\n      isChecked,\n      page,\n      perPage,\n    } = this.state;\n\n    const toolbarKebabDropdownItems = [\n      <OverflowMenuDropdownItem key=\"link\">Link</OverflowMenuDropdownItem>,\n      <OverflowMenuDropdownItem key=\"action\" component=\"button\">\n        Action\n      </OverflowMenuDropdownItem>,\n      <OverflowMenuDropdownItem key=\"disabled link\" isDisabled>\n        Disabled Link\n      </OverflowMenuDropdownItem>,\n      <OverflowMenuDropdownItem\n        key=\"disabled action\"\n        isDisabled\n        component=\"button\"\n      >\n        Disabled Action\n      </OverflowMenuDropdownItem>,\n      <DropdownSeparator key=\"separator\" />,\n      <OverflowMenuDropdownItem key=\"separated link\">\n        Separated Link\n      </OverflowMenuDropdownItem>,\n      <OverflowMenuDropdownItem key=\"separated action\" component=\"button\">\n        Separated Action\n      </OverflowMenuDropdownItem>,\n    ];\n\n    const toolbarItems = (\n      <React.Fragment>\n        <ToolbarItem variant=\"bulk-select\">\n          {this.buildSelectDropdown()}\n        </ToolbarItem>\n        <ToolbarItem toggleIcon={<FilterIcon />} breakpoint=\"xl\">\n          {this.buildFilterDropdown()}\n        </ToolbarItem>\n        <ToolbarItem variant=\"overflow-menu\">\n          <OverflowMenu breakpoint=\"md\">\n            <OverflowMenuItem>\n              <Button variant=\"primary\">Create a Project</Button>\n            </OverflowMenuItem>\n            <OverflowMenuControl hasAdditionalOptions>\n              <Dropdown\n                onSelect={this.onToolbarKebabDropdownSelect}\n                toggle={\n                  <KebabToggle\n                    onToggle={this.onToolbarKebabDropdownToggle}\n                    id=\"toggle-id-6\"\n                  />\n                }\n                isOpen={isLowerToolbarKebabDropdownOpen}\n                isPlain\n                dropdownItems={toolbarKebabDropdownItems}\n              />\n            </OverflowMenuControl>\n          </OverflowMenu>\n        </ToolbarItem>\n        <ToolbarItem variant=\"pagination\" alignment={{ default: \"alignRight\" }}>\n          {this.renderPagination()}\n        </ToolbarItem>\n      </React.Fragment>\n    );\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label=\"Nav\">\n        <NavList>\n          <NavItem itemId={0} isActive={activeItem === 0}>\n            System Panel\n          </NavItem>\n          <NavItem itemId={1} isActive={activeItem === 1}>\n            Policy\n          </NavItem>\n          <NavItem itemId={2} isActive={activeItem === 2}>\n            Authentication\n          </NavItem>\n          <NavItem itemId={3} isActive={activeItem === 3}>\n            Network Services\n          </NavItem>\n          <NavItem itemId={4} isActive={activeItem === 4}>\n            Server\n          </NavItem>\n        </NavList>\n      </Nav>\n    );\n\n    const kebabDropdownItems = [\n      <DropdownItem key=\"kebab-settings\">\n        <CogIcon /> Settings\n      </DropdownItem>,\n      <DropdownItem key=\"kebab-help\">\n        <HelpIcon /> Help\n      </DropdownItem>,\n    ];\n    const userDropdownItems = [\n      <DropdownGroup key=\"group 2\">\n        <DropdownItem key=\"group 2 profile\">My profile</DropdownItem>\n        <DropdownItem key=\"group 2 user\" component=\"button\">\n          User management\n        </DropdownItem>\n        <DropdownItem key=\"group 2 logout\">Logout</DropdownItem>\n      </DropdownGroup>,\n    ];\n    const headerTools = (\n      <PageHeaderTools>\n        <PageHeaderToolsGroup\n          visibility={{\n            default: \"hidden\",\n            lg: \"visible\",\n          }} /** the settings and help icon buttons are only visible on desktop sizes and replaced by a kebab dropdown for other sizes */\n        >\n          <PageHeaderToolsItem>\n            <Button aria-label=\"Settings actions\" variant={ButtonVariant.plain}>\n              <CogIcon />\n            </Button>\n          </PageHeaderToolsItem>\n          <PageHeaderToolsItem>\n            <Button aria-label=\"Help actions\" variant={ButtonVariant.plain}>\n              <HelpIcon />\n            </Button>\n          </PageHeaderToolsItem>\n        </PageHeaderToolsGroup>\n        <PageHeaderToolsGroup>\n          <PageHeaderToolsItem\n            visibility={{\n              lg: \"hidden\",\n            }} /** this kebab dropdown replaces the icon buttons and is hidden for desktop sizes */\n          >\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onKebabDropdownSelect}\n              toggle={\n                <KebabToggle onToggle={this.onPageToolbarKebabDropdownToggle} />\n              }\n              isOpen={isUpperToolbarKebabDropdownOpen}\n              dropdownItems={kebabDropdownItems}\n            />\n          </PageHeaderToolsItem>\n          <PageHeaderToolsItem\n            visibility={{\n              default: \"hidden\",\n              md: \"visible\",\n            }} /** this user dropdown is hidden on mobile sizes */\n          >\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onPageDropdownSelect}\n              isOpen={isUpperToolbarDropdownOpen}\n              toggle={\n                <DropdownToggle onToggle={this.onPageDropdownToggle}>\n                  John Smith\n                </DropdownToggle>\n              }\n              dropdownItems={userDropdownItems}\n            />\n          </PageHeaderToolsItem>\n        </PageHeaderToolsGroup>\n        <Avatar src={imgAvatar} alt=\"Avatar image\" />\n      </PageHeaderTools>\n    );\n\n    const Header = (\n      <PageHeader\n        logo={<Brand src={imgBrand} alt=\"Patternfly Logo\" />}\n        headerTools={headerTools}\n        showNavToggle\n      />\n    );\n    const Sidebar = <PageSidebar nav={PageNav} />;\n    const pageId = \"main-content-card-view-default-nav\";\n    const PageSkipToContent = (\n      <SkipToContent href={`#${pageId}`}>Skip to Content</SkipToContent>\n    );\n\n    const filtered =\n      filters.products.length > 0\n        ? res.filter((card) => {\n            return (\n              filters.products.length === 0 ||\n              filters.products.includes(card.name)\n            );\n          })\n        : res;\n\n    const icons = {};\n\n    return (\n      <React.Fragment>\n        <Page\n          header={Header}\n          sidebar={Sidebar}\n          isManagedSidebar\n          skipToContent={PageSkipToContent}\n          mainContainerId={pageId}\n        >\n          <PageSection variant={PageSectionVariants.light}>\n            <TextContent>\n              <Text component=\"h1\">Projects</Text>\n              <Text component=\"p\">\n                This is a demo that showcases Patternfly Cards.\n              </Text>\n            </TextContent>\n            <Toolbar id=\"toolbar-group-types\" clearAllFilters={this.onDelete}>\n              <ToolbarContent>{toolbarItems}</ToolbarContent>\n            </Toolbar>\n          </PageSection>\n          <PageSection isFilled>\n            <Gallery hasGutter>\n              <Card isHoverable isCompact>\n                <Bullseye>\n                  <EmptyState variant={EmptyStateVariant.xs}>\n                    <EmptyStateIcon icon={PlusCircleIcon} />\n                    <Title headingLevel=\"h2\" size=\"md\">\n                      Add a new card to your page\n                    </Title>\n                    <EmptyStateSecondaryActions>\n                      <Button variant=\"link\">Add card</Button>\n                    </EmptyStateSecondaryActions>\n                  </EmptyState>\n                </Bullseye>\n              </Card>\n              {filtered.map((product, key) => (\n                <Card isHoverable isCompact key={product.name}>\n                  <CardHeader>\n                    <img\n                      src={icons[product.icon]}\n                      alt={`${product.name} icon`}\n                      style={{ maxWidth: \"60px\" }}\n                    />\n                    <CardActions>\n                      <Dropdown\n                        isPlain\n                        position=\"right\"\n                        onSelect={(e) => this.onCardKebabDropdownSelect(key, e)}\n                        toggle={\n                          <KebabToggle\n                            onToggle={(isCardKebabDropdownOpen) =>\n                              this.onCardKebabDropdownToggle(\n                                key,\n                                isCardKebabDropdownOpen\n                              )\n                            }\n                          />\n                        }\n                        isOpen={this.state[key]}\n                        dropdownItems={[\n                          <DropdownItem\n                            key=\"trash\"\n                            onClick={this.deleteItem(product)}\n                            position=\"right\"\n                          >\n                            <TrashIcon />\n                            Delete\n                          </DropdownItem>,\n                        ]}\n                      />\n                      <Checkbox\n                        checked={isChecked}\n                        value={product.id}\n                        onChange={this.handleCheckboxClick}\n                        isChecked={selectedItems.includes(product.id)}\n                        defaultChecked={this.state.itemsCheckedByDefault}\n                        aria-label=\"card checkbox example\"\n                        id={`check-${product.id}`}\n                      />\n                    </CardActions>\n                  </CardHeader>\n                  <CardTitle>{product.name}</CardTitle>\n                  <CardBody>{product.description}</CardBody>\n                </Card>\n              ))}\n            </Gallery>\n          </PageSection>\n          <PageSection\n            isFilled={false}\n            sticky=\"bottom\"\n            padding={{ default: \"noPadding\" }}\n            variant=\"light\"\n          >\n            <Pagination\n              itemCount={this.state.totalItemCount}\n              page={page}\n              page={this.state.page}\n              perPage={this.state.perPage}\n              onPerPageSelect={this.onPerPageSelect}\n              onSetPage={this.onSetPage}\n              variant=\"bottom\"\n            />\n          </PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default test;\n","import React from \"react\";\nimport { Nav, NavItem, NavList } from \"@patternfly/react-core\";\nimport \"./stylesheet.css\";\nimport { BrowserRouter as Router, Switch, Link, Route } from \"react-router-dom\";\nimport \"@patternfly/react-core/dist/styles/base.css\";\nimport \"@patternfly/patternfly/patternfly.css\";\n\nclass Navigation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: 3,\n    };\n    this.onSelect = (result) => {\n      this.setState({\n        activeItem: result.itemId,\n      });\n    };\n  }\n\n  render() {\n    const { activeItem } = this.state;\n\n    return (\n      <Nav onSelect={this.onSelect} aria-label=\"Nav\">\n        <NavList>\n          <NavItem id=\"orders-link\" itemId={0} isActive={activeItem === 0}>\n            <Link to=\"/orders\">Orders</Link>\n          </NavItem>\n          <NavItem id=\"articles-link\" itemId={1} isActive={activeItem === 1}>\n            <Link to=\"/articles\">Articles</Link>\n          </NavItem>\n          <NavItem id=\"customers-link\" itemId={2} isActive={activeItem === 2}>\n            <Link to=\"/customers\">Customers</Link>\n          </NavItem>\n        </NavList>\n      </Nav>\n    );\n  }\n}\n\nexport default Navigation;\n","import React, { Component } from \"react\";\n\nimport {\n  PageSection,\n  TextContent,\n  Text,\n  PageSectionVariants,\n  Link,\n} from \"@patternfly/react-core\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <PageSection variant={PageSectionVariants.light}>\n          <TextContent>\n            <Text component=\"h1\">Home</Text>\n            <Text component=\"p\">\n              Navigate yourself through a web-application built with a\n              Patternfly (React) Frontend and a Quarkus Backend.\n            </Text>\n            <Text component=\"p\">\n              Start out by clicking at the top-left corner and one of the shown\n              links, and navigate yourself through the Website.\n            </Text>\n          </TextContent>\n        </PageSection>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport \"@patternfly/react-core/dist/styles/base.css\";\nimport \"@patternfly/patternfly/patternfly.css\";\nimport \"./stylesheet.css\";\n\nimport SearchIcon from \"@patternfly/react-icons/dist/js/icons/search-icon\";\nimport TimesIcon from \"@patternfly/react-icons/dist/js/icons/times-icon\";\n\nimport {\n  PageSection,\n  TextContent,\n  Text,\n  PageSectionVariants,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n  Button,\n  ButtonVariant,\n  InputGroup,\n  TextInput,\n  Pagination,\n  PaginationVariant,\n  Drawer,\n  DrawerPanelContent,\n  DrawerContent,\n  DrawerContentBody,\n  DrawerHead,\n  DrawerActions,\n  DrawerCloseButton,\n  Form,\n  FormGroup,\n  TextArea,\n  FormSelect,\n  FormSelectOption,\n  ActionGroup,\n  Select,\n  SelectVariant,\n  SelectOption,\n} from \"@patternfly/react-core\";\n\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  sortable,\n  SortByDirection,\n} from \"@patternfly/react-table\";\n\nimport axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"http://localhost:8080/article\",\n});\n\nclass Articles extends Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n    this.getLength();\n\n    this.state = {\n      articles: [],\n      columns: [\n        { title: \"Name\", transforms: [sortable] },\n        { title: \"Description\", transforms: [sortable] },\n        { title: \"Category\", transforms: [sortable] },\n      ],\n      sortBy: {},\n      page: \"0\",\n      perPage: \"10\",\n      length: 0,\n      isExpanded: false,\n      drawerEdit: false,\n      searchValue: \"\",\n      categoryIsExpanded: false,\n      categorySelected: null,\n\n      articleIdValue: undefined,\n      articleCategoryDrawerValue: undefined,\n      articleNameValue: \"\",\n      articleDescriptionValue: \"\",\n    };\n    this.drawerRef = React.createRef();\n    this.onSort = this.onSort.bind(this);\n    this.onRowClick = this.onRowClick.bind(this);\n\n    this.handleArticleCategoryChange = (articleCategoryDrawerValue) => {\n      this.setState({ articleCategoryDrawerValue });\n    };\n    this.handleArticleNameChange = (articleNameValue) => {\n      this.setState({ articleNameValue });\n    };\n    this.handleArticleDescriptionChange = (articleDescriptionValue) => {\n      this.setState({ articleDescriptionValue });\n    };\n\n    this.categoryDrawerOptions = [\n      { value: undefined, label: \"Please Choose\", disabled: false },\n      { value: 0, label: \"Toys\", disabled: false },\n      { value: 1, label: \"Fashion\", disabled: false },\n      { value: 2, label: \"Books\", disabled: false },\n      { value: 3, label: \"Movies\", disabled: false },\n      { value: 4, label: \"Games\", disabled: false },\n      { value: 5, label: \"Music\", disabled: false },\n    ];\n\n    this.categorySelectOptions = [\n      { value: \"Category\", disabled: false, isPlaceholder: true },\n      { value: \"Toys\", disabled: false },\n      { value: \"Fashion\", disabled: false },\n      { value: \"Books\", disabled: false },\n      { value: \"Movies\", disabled: false },\n      { value: \"Games\", disabled: false },\n      { value: \"Music\", disabled: false },\n    ];\n\n    this.onSetPage = (_event, value) => {\n      this.fetch(value - 1, this.state.perPage);\n      this.setState({\n        page: value,\n      });\n    };\n    this.onPerPageSelect = (_event, value) => {\n      this.setState({\n        perPage: value,\n      });\n      this.fetch(0, value);\n    };\n\n    this.onExpand = () => {\n      this.drawerRef.current && this.drawerRef.current.focus();\n    };\n\n    this.onClickAddArticle = () => {\n      const isExpanded = !this.state.isExpanded;\n      this.setState({\n        drawerEdit: false,\n        isExpanded,\n      });\n    };\n\n    this.onCloseClick = () => {\n      this.setState({\n        isExpanded: false,\n        articleNameValue: \"\",\n        articleDescriptionValue: \"\",\n        articleCategoryDrawerValue: undefined,\n      });\n    };\n\n    this.onSearchValueChange = (inputValue) => {\n      this.setState({\n        searchValue: inputValue,\n      });\n    };\n\n    this.onCategoryToggle = (isExpanded) => {\n      this.setState({\n        categoryIsExpanded: isExpanded,\n      });\n    };\n\n    this.onCategorySelect = (event, selection, isPlaceholder) => {\n      console.log(selection);\n      if (isPlaceholder) this.clearCategorySelection();\n      this.setState(\n        {\n          categorySelected: selection,\n          categoryIsExpanded: false,\n        },\n        function () {\n          this.search();\n        }\n      );\n    };\n\n    this.clearCategorySelection = () => {\n      this.setState({\n        categorySelected: null,\n        categoryIsExpanded: false,\n      });\n      this.fetch(this.state.page, this.state.perPageParameter);\n    };\n  }\n\n  getLength = () => {\n    api.get(\"/length\").then((res) => {\n      this.setState({ length: res.data });\n    });\n  };\n\n  fetch = (pageParameter, perPageParameter) => {\n    const params = {\n      page: pageParameter,\n      size: perPageParameter,\n    };\n\n    api.get(\"/paginated\", { params }).then((res) => {\n      this.setState({ articles: res.data });\n    });\n  };\n\n  post = () => {\n    api.post(\"/\", {\n      name: this.state.articleNameValue,\n      description: this.state.articleDescriptionValue,\n      category: this.state.articleCategoryDrawerValue,\n    });\n\n    this.setState({\n      isExpanded: false,\n      articleNameValue: \"\",\n      articleDescriptionValue: \"\",\n      page: \"0\",\n      perPage: \"10\",\n      articleCategoryDrawerValue: undefined,\n      articleIdValue: undefined,\n    });\n  };\n\n  update = () => {\n    api.put(\"/\" + this.state.articleIdValue, {\n      name: this.state.articleNameValue,\n      description: this.state.articleDescriptionValue,\n      category: this.state.articleCategoryDrawerValue,\n    });\n\n    this.setState({\n      isExpanded: false,\n      articleNameValue: \"\",\n      articleDescriptionValue: \"\",\n      page: \"0\",\n      perPage: \"10\",\n      articleCategoryDrawerValue: undefined,\n      articleIdValue: undefined,\n    });\n  };\n\n  delete = () => {\n    api.delete(\"/\" + this.state.articleIdValue);\n\n    this.setState({\n      isExpanded: false,\n      articleNameValue: \"\",\n      articleDescriptionValue: \"\",\n      page: \"0\",\n      perPage: \"10\",\n      articleCategoryDrawerValue: undefined,\n      articleIdValue: undefined,\n    });\n  };\n\n  search = () => {\n    const params = {\n      search: this.state.searchValue,\n      filter: this.state.categorySelected,\n    };\n    api.get(\"/search\", { params }).then((res) => {\n      this.setState({ articles: res.data });\n    });\n  };\n\n  deleteSearch = () => {\n    this.setState({ searchValue: \"\" });\n    this.fetch(this.state.page, this.state.perPage);\n  };\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.fetch(\"0\", \"10\");\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  onSort(_event, index, direction) {\n    const sortedRows = this.state.articles.sort((a, b) =>\n      a[index] < b[index] ? -1 : a[index] > b[index] ? 1 : 0\n    );\n    this.setState({\n      sortBy: {\n        index,\n        direction,\n      },\n      articles:\n        direction === SortByDirection.asc ? sortedRows : sortedRows.reverse(),\n    });\n  }\n\n  onRowClick(_event, row) {\n    const article = this.state.articles[row.secretTableRowKeyId];\n\n    switch (article.category) {\n      case \"TOYS\":\n        this.setState({ articleCategoryDrawerValue: 0 });\n        break;\n      case \"FASHION\":\n        this.setState({ articleCategoryDrawerValue: 1 });\n        break;\n      case \"BOOKS\":\n        this.setState({ articleCategoryDrawerValue: 2 });\n        break;\n      case \"MOVIES\":\n        this.setState({ articleCategoryDrawerValue: 3 });\n        break;\n      case \"GAMES\":\n        this.setState({ articleCategoryDrawerValue: 4 });\n        break;\n      case \"MUSIC\":\n        this.setState({ articleCategoryDrawerValue: 5 });\n        break;\n\n      default:\n        this.setState({ articleCategoryDrawerValue: undefined });\n        break;\n    }\n    this.setState({\n      drawerEdit: true,\n      isExpanded: true,\n      articleNameValue: article.name,\n      articleDescriptionValue: article.description,\n      articleIdValue: article.id,\n    });\n  }\n\n  render() {\n    const {\n      columns,\n      articles,\n      sortBy,\n      isExpanded,\n      articleNameValue,\n      articleDescriptionValue,\n      articleCategoryDrawerValue,\n      drawerEdit,\n      categoryIsExpanded,\n      categorySelected,\n    } = this.state;\n\n    let button;\n\n    if (!drawerEdit) {\n      button = (\n        <Button variant=\"primary\" onClick={this.post}>\n          Add article\n        </Button>\n      );\n    } else {\n      button = (\n        <div>\n          <Button variant=\"primary\" onClick={this.update}>\n            Edit article\n          </Button>\n          <Button variant=\"danger\" onClick={this.delete} id=\"deleteButton\">\n            Delete article\n          </Button>\n        </div>\n      );\n    }\n\n    const toolbarItems = (\n      <React.Fragment>\n        <ToolbarItem>\n          <InputGroup>\n            <TextInput\n              name=\"searchInput\"\n              id=\"searchInput\"\n              type=\"text\"\n              aria-label=\"search input\"\n              onChange={this.onSearchValueChange}\n              value={this.state.searchValue}\n            />\n            <Button\n              variant={ButtonVariant.control}\n              aria-label=\"search button for search input\"\n              onClick={this.search}\n            >\n              <SearchIcon />\n            </Button>\n            <Button\n              variant={ButtonVariant.control}\n              aria-label=\"delete button for search input\"\n              onClick={this.deleteSearch}\n            >\n              <TimesIcon />\n            </Button>\n          </InputGroup>\n        </ToolbarItem>\n        <ToolbarItem>\n          <Select\n            variant={SelectVariant.single}\n            aria-label=\"Select Input\"\n            onToggle={this.onCategoryToggle}\n            onSelect={this.onCategorySelect}\n            selections={categorySelected}\n            isOpen={categoryIsExpanded}\n          >\n            {this.categorySelectOptions.map((category, index) => (\n              <SelectOption\n                isDisabled={category.disabled}\n                isPlaceholder={category.isPlaceholder}\n                key={index}\n                value={category.value}\n              />\n            ))}\n          </Select>\n        </ToolbarItem>\n        <ToolbarItem variant=\"separator\" />\n        <ToolbarItem>\n          <Button\n            variant=\"primary\"\n            aria-expanded={isExpanded}\n            onClick={this.onClickAddArticle}\n          >\n            Add Article\n          </Button>\n        </ToolbarItem>\n        <ToolbarItem variant=\"separator\" />\n\n        <ToolbarItem>\n          <Pagination\n            id={\"pagination\"}\n            itemCount={this.state.length}\n            widgetId=\"pagination-options-menu-top\"\n            perPage={this.state.perPage}\n            page={this.state.page}\n            variant={PaginationVariant.top}\n            onSetPage={this.onSetPage}\n            onPerPageSelect={this.onPerPageSelect}\n            isCompact\n          />\n        </ToolbarItem>\n      </React.Fragment>\n    );\n\n    const formContent = (\n      <Form isHorizontal>\n        <FormGroup label=\"Name\" isRequired fieldId=\"horizontal-form-name\">\n          <TextInput\n            value={articleNameValue}\n            isRequired\n            type=\"text\"\n            id=\"horizontal-form-name\"\n            aria-describedby=\"horizontal-form-name-helper\"\n            name=\"horizontal-form-name\"\n            onChange={this.handleArticleNameChange}\n          />\n        </FormGroup>\n        <FormGroup label=\"Article Description\" fieldId=\"horizontal-form-desc\">\n          <TextArea\n            value={articleDescriptionValue}\n            onChange={this.handleArticleDescriptionChange}\n            name=\"horizontal-form-desc\"\n            id=\"horizontal-form-desc\"\n          />\n        </FormGroup>\n        <FormGroup label=\"Category\" fieldId=\"horizontal-form-category\">\n          <FormSelect\n            value={articleCategoryDrawerValue}\n            isRequired\n            onChange={this.handleArticleCategoryChange}\n            id=\"horzontal-form-category\"\n            name=\"horizontal-form-category\"\n          >\n            {this.categoryDrawerOptions.map((option, index) => (\n              <FormSelectOption\n                isDisabled={option.disabled}\n                key={index}\n                value={option.value}\n                label={option.label}\n              />\n            ))}\n          </FormSelect>\n        </FormGroup>\n\n        <ActionGroup>{button}</ActionGroup>\n      </Form>\n    );\n\n    const panelContent = (\n      <DrawerPanelContent>\n        <DrawerHead>\n          <span tabIndex={isExpanded ? 0 : -1} ref={this.drawerRef}>\n            {formContent}\n          </span>\n          <DrawerActions>\n            <DrawerCloseButton onClick={this.onCloseClick} />\n          </DrawerActions>\n        </DrawerHead>\n      </DrawerPanelContent>\n    );\n\n    const drawerContent = (\n      <Table\n        aria-label=\"Sortable Table\"\n        sortBy={sortBy}\n        onSort={this.onSort}\n        cells={columns}\n        rows={articles.map((article, index) => [\n          article.name,\n          article.description,\n          article.category,\n        ])}\n      >\n        <TableHeader />\n        <TableBody onRowClick={this.onRowClick} />\n      </Table>\n    );\n\n    return (\n      <div>\n        <PageSection variant={PageSectionVariants.light}>\n          <TextContent>\n            <Text component=\"h1\">Articles</Text>\n            <Text component=\"p\">Shows every listed article.</Text>\n          </TextContent>\n          <Toolbar id=\"toolbar\">\n            <ToolbarContent>{toolbarItems}</ToolbarContent>\n          </Toolbar>\n        </PageSection>\n        <PageSection>\n          <Drawer isExpanded={isExpanded} isInline onExpand={this.onExpand}>\n            <DrawerContent panelContent={panelContent}>\n              <DrawerContentBody>{drawerContent}</DrawerContentBody>\n            </DrawerContent>\n          </Drawer>\n        </PageSection>\n      </div>\n    );\n  }\n}\n\nexport default Articles;\n","import React, { Component } from \"react\";\nimport \"@patternfly/react-core/dist/styles/base.css\";\nimport \"@patternfly/patternfly/patternfly.css\";\n\nimport SearchIcon from \"@patternfly/react-icons/dist/js/icons/search-icon\";\nimport TimesIcon from \"@patternfly/react-icons/dist/js/icons/times-icon\";\n\nimport {\n  PageSection,\n  TextContent,\n  Text,\n  PageSectionVariants,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n  Button,\n  ButtonVariant,\n  InputGroup,\n  TextInput,\n  Pagination,\n  PaginationVariant,\n  Drawer,\n  DrawerPanelContent,\n  DrawerContent,\n  DrawerContentBody,\n  DrawerHead,\n  DrawerActions,\n  DrawerCloseButton,\n  Form,\n  FormGroup,\n  TextArea,\n  FormSelect,\n  FormSelectOption,\n  ActionGroup,\n  Select,\n  SelectVariant,\n  SelectOption,\n  DatePicker,\n} from \"@patternfly/react-core\";\n\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  sortable,\n  SortByDirection,\n} from \"@patternfly/react-table\";\n\nimport axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"http://localhost:8080/customer\",\n});\n\nclass Customers extends Component {\n  constructor(props) {\n    super(props);\n    this.getLength();\n\n    this.state = {\n      customers: [],\n      columns: [\n        { title: \"First Name\", transforms: [sortable] },\n        { title: \"Last Name\", transforms: [sortable] },\n        { title: \"Username\", transforms: [sortable] },\n        { title: \"Date of birth\", transforms: [sortable] },\n        { title: \"Gender\", transforms: [sortable] },\n      ],\n      sortBy: {},\n      page: \"0\",\n      perPage: \"10\",\n      length: 0,\n      isExpanded: false,\n      drawerEdit: false,\n      searchValue: \"\",\n      genderIsExpanded: false,\n      genderSelected: null,\n\n      customerIdValue: undefined,\n      customerFirstNameValue: \"\",\n      customerLastNameValue: \"\",\n      customerUsernameValue: \"\",\n      customerPasswordValue: \"\",\n      customerDobValue: undefined,\n      customerGenderDrawerValue: undefined,\n    };\n    this.drawerRef = React.createRef();\n    this.onSort = this.onSort.bind(this);\n    this.onRowClick = this.onRowClick.bind(this);\n\n    this.handleCustomerFirstNameChange = (customerFirstNameValue) => {\n      this.setState({ customerFirstNameValue });\n    };\n    this.handleCustomerLastNameChange = (customerLastNameValue) => {\n      this.setState({ customerLastNameValue });\n    };\n    this.handleCustomerUsernameChange = (customerUsernameValue) => {\n      this.setState({ customerUsernameValue });\n    };\n    this.handleCustomerPasswordChange = (customerPasswordValue) => {\n      this.setState({ customerPasswordValue });\n    };\n    this.handleCustomerDobChange = (customerDobValue) => {\n      console.log(customerDobValue);\n      this.setState({ customerDobValue });\n    };\n    this.handleCustomerGenderChange = (customerGenderDrawerValue) => {\n      this.setState({ customerGenderDrawerValue });\n    };\n\n    this.genderDrawerOptions = [\n      { value: undefined, label: \"Please Choose\", disabled: false },\n      { value: 0, label: \"Male\", disabled: false },\n      { value: 1, label: \"Female\", disabled: false },\n      { value: 2, label: \"Diverse\", disabled: false },\n    ];\n\n    this.genderSelectOptions = [\n      { value: \"Gender\", disabled: false, isPlaceholder: true },\n      { value: \"Male\", disabled: false },\n      { value: \"Female\", disabled: false },\n      { value: \"Diverse\", disabled: false },\n    ];\n\n    this.onSetPage = (_event, value) => {\n      this.fetch(value - 1, this.state.perPage);\n      this.setState({\n        page: value,\n      });\n    };\n    this.onPerPageSelect = (_event, value) => {\n      this.setState({\n        perPage: value,\n      });\n      this.fetch(0, value);\n    };\n\n    this.onExpand = () => {\n      this.drawerRef.current && this.drawerRef.current.focus();\n    };\n\n    this.onClickAddCustomer = () => {\n      const isExpanded = !this.state.isExpanded;\n      this.setState({\n        drawerEdit: false,\n        isExpanded,\n      });\n    };\n\n    this.onCloseClick = () => {\n      this.setState({\n        isExpanded: false,\n        customerFirstNameValue: \"\",\n        customerLastNameValue: \"\",\n        customerUsernameValue: \"\",\n        customerPasswordValue: \"\",\n        customerGenderDrawerValue: undefined,\n      });\n    };\n\n    this.onSearchValueChange = (inputValue) => {\n      this.setState({\n        searchValue: inputValue,\n      });\n    };\n\n    this.onGenderToggle = (isExpanded) => {\n      this.setState({\n        genderIsExpanded: isExpanded,\n      });\n    };\n\n    this.onGenderSelect = (event, selection, isPlaceholder) => {\n      if (isPlaceholder) this.clearGenderSelection();\n      this.setState(\n        {\n          genderSelected: selection,\n          genderIsExpanded: false,\n        },\n        function () {\n          this.search();\n        }\n      );\n    };\n\n    this.clearGenderSelection = () => {\n      this.setState({\n        genderSelected: null,\n        genderIsExpanded: false,\n      });\n      this.fetch(this.state.page, this.state.perPageParameter);\n    };\n  }\n\n  getLength = () => {\n    api.get(\"/length\").then((res) => {\n      this.setState({ length: res.data });\n    });\n  };\n\n  fetch = (pageParameter, perPageParameter) => {\n    const params = {\n      page: pageParameter,\n      size: perPageParameter,\n    };\n\n    api.get(\"/paginated\", { params }).then((res) => {\n      this.setState({ customers: res.data });\n    });\n  };\n\n  post = () => {\n    api.post(\"/\", {\n      first_name: this.state.customerFirstNameValue,\n      last_name: this.state.customerLastNameValue,\n      username: this.state.customerUsernameValue,\n      password: this.state.customerPasswordValue,\n      dob: this.state.customerDobValue,\n      gender: this.state.customerGenderDrawerValue,\n    });\n\n    this.setState({\n      isExpanded: false,\n      customerFirstNameValue: \"\",\n      customerLastNameValue: \"\",\n      customerUsernameValue: \"\",\n      customerPasswordValue: \"\",\n      page: \"0\",\n      perPage: \"10\",\n      customerGenderDrawerValue: undefined,\n      customerIdValue: undefined,\n      customerDobValue: undefined,\n    });\n  };\n\n  update = () => {\n    api.put(\"/\" + this.state.customerIdValue, {\n      first_name: this.state.customerFirstNameValue,\n      last_name: this.state.customerLastNameValue,\n      username: this.state.customerUsernameValue,\n      password: this.state.customerPasswordValue,\n      dob: this.state.customerDobValue,\n      gender: this.state.customerGenderDrawerValue,\n    });\n\n    this.setState({\n      isExpanded: false,\n      customerFirstNameValue: \"\",\n      customerLastNameValue: \"\",\n      customerUsernameValue: \"\",\n      customerPasswordValue: \"\",\n      page: \"0\",\n      perPage: \"10\",\n      customerGenderDrawerValue: undefined,\n      customerIdValue: undefined,\n      customerDobValue: undefined,\n    });\n  };\n\n  delete = () => {\n    api.delete(\"/\" + this.state.customerIdValue);\n\n    this.setState({\n      isExpanded: false,\n      customerFirstNameValue: \"\",\n      customerLastNameValue: \"\",\n      customerUsernameValue: \"\",\n      customerPasswordValue: \"\",\n      page: \"0\",\n      perPage: \"10\",\n      customerGenderDrawerValue: undefined,\n      customerIdValue: undefined,\n      customerDobValue: undefined,\n    });\n  };\n\n  search = () => {\n    const params = {\n      search: this.state.searchValue,\n      filter: this.state.genderSelected,\n    };\n    api.get(\"/search\", { params }).then((res) => {\n      this.setState({ customers: res.data });\n    });\n  };\n\n  deleteSearch = () => {\n    this.setState({ searchValue: \"\" });\n    this.fetch(this.state.page, this.state.perPage);\n  };\n\n  componentDidMount() {\n    this.fetch(\"0\", \"10\");\n  }\n\n  onSort(_event, index, direction) {\n    const sortedRows = this.state.customers.sort((a, b) =>\n      a[index] < b[index] ? -1 : a[index] > b[index] ? 1 : 0\n    );\n    this.setState({\n      sortBy: {\n        index,\n        direction,\n      },\n      customers:\n        direction === SortByDirection.asc ? sortedRows : sortedRows.reverse(),\n    });\n  }\n\n  onRowClick(_event, row) {\n    const customer = this.state.customers[row.secretTableRowKeyId];\n\n    switch (customer.gender) {\n      case \"MALE\":\n        this.setState({ customerGenderDrawerValue: 0 });\n        break;\n      case \"FEMALE\":\n        this.setState({ customerGenderDrawerValue: 1 });\n        break;\n      case \"DIVERSE\":\n        this.setState({ customerGenderDrawerValue: 2 });\n        break;\n      default:\n        this.setState({ customerGenderDrawerValue: undefined });\n        break;\n    }\n\n    this.setState({\n      drawerEdit: true,\n      isExpanded: true,\n      customerFirstNameValue: customer.first_name,\n      customerLastNameValue: customer.last_name,\n      customerUsernameValue: customer.username,\n      customerPasswordValue: customer.password,\n      customerDobValue: customer.dob,\n      customerIdValue: customer.id,\n    });\n  }\n\n  render() {\n    const {\n      columns,\n      customers,\n      sortBy,\n      isExpanded,\n      customerFirstNameValue,\n      customerLastNameValue,\n      customerUsernameValue,\n      customerPasswordValue,\n      customerDobValue,\n      customerGenderDrawerValue,\n      drawerEdit,\n      genderIsExpanded,\n      genderSelected,\n    } = this.state;\n\n    let button;\n\n    if (!drawerEdit) {\n      button = (\n        <Button variant=\"primary\" onClick={this.post}>\n          Add customer\n        </Button>\n      );\n    } else {\n      button = (\n        <div>\n          <Button variant=\"primary\" onClick={this.update}>\n            Edit customer\n          </Button>\n          <Button variant=\"danger\" onClick={this.delete} id=\"deleteButton\">\n            Delete customer\n          </Button>\n        </div>\n      );\n    }\n\n    const toolbarItems = (\n      <React.Fragment>\n        <ToolbarItem>\n          <InputGroup>\n            <TextInput\n              name=\"textInput1\"\n              id=\"textInput1\"\n              type=\"search\"\n              aria-label=\"search input example\"\n              onChange={this.onSearchValueChange}\n              value={this.state.searchValue}\n            />\n            <Button\n              variant={ButtonVariant.control}\n              aria-label=\"search button for search input\"\n              onClick={this.search}\n            >\n              <SearchIcon />\n            </Button>\n            <Button\n              variant={ButtonVariant.control}\n              aria-label=\"delete button for search input\"\n              onClick={this.deleteSearch}\n            >\n              <TimesIcon />\n            </Button>\n          </InputGroup>\n        </ToolbarItem>\n        <ToolbarItem>\n          <Select\n            variant={SelectVariant.single}\n            aria-label=\"Select Input\"\n            onToggle={this.onGenderToggle}\n            onSelect={this.onGenderSelect}\n            selections={genderSelected}\n            isOpen={genderIsExpanded}\n          >\n            {this.genderSelectOptions.map((gender, index) => (\n              <SelectOption\n                isDisabled={gender.disabled}\n                isPlaceholder={gender.isPlaceholder}\n                key={index}\n                value={gender.value}\n              />\n            ))}\n          </Select>\n        </ToolbarItem>\n        <ToolbarItem variant=\"separator\" />\n        <ToolbarItem>\n          <Button variant=\"primary\" onClick={this.onClickAddCustomer}>\n            Add Customer\n          </Button>\n        </ToolbarItem>\n        <ToolbarItem variant=\"separator\" />\n        <ToolbarItem>\n          <Pagination\n            id={\"pagination\"}\n            itemCount={this.state.length}\n            widgetId=\"pagination-options-menu-top\"\n            perPage={this.state.perPage}\n            page={this.state.page}\n            variant={PaginationVariant.top}\n            onSetPage={this.onSetPage}\n            onPerPageSelect={this.onPerPageSelect}\n            isCompact\n          />\n        </ToolbarItem>\n      </React.Fragment>\n    );\n\n    const formContent = (\n      <Form isHorizontal>\n        <FormGroup label=\"First Name\" isRequired fieldId=\"horizontal-form-name\">\n          <TextInput\n            value={customerFirstNameValue}\n            isRequired\n            type=\"text\"\n            id=\"horizontal-form-name\"\n            aria-describedby=\"horizontal-form-name-helper\"\n            name=\"horizontal-form-name\"\n            onChange={this.handleCustomerFirstNameChange}\n          />\n        </FormGroup>\n        <FormGroup label=\"Last Name\" isRequired fieldId=\"horizontal-form-name\">\n          <TextInput\n            value={customerLastNameValue}\n            isRequired\n            type=\"text\"\n            id=\"horizontal-form-name\"\n            aria-describedby=\"horizontal-form-name-helper\"\n            name=\"horizontal-form-name\"\n            onChange={this.handleCustomerLastNameChange}\n          />\n        </FormGroup>\n        <FormGroup label=\"Username\" isRequired fieldId=\"horizontal-form-name\">\n          <TextInput\n            value={customerUsernameValue}\n            isRequired\n            type=\"text\"\n            id=\"horizontal-form-name\"\n            aria-describedby=\"horizontal-form-name-helper\"\n            name=\"horizontal-form-name\"\n            onChange={this.handleCustomerUsernameChange}\n          />\n        </FormGroup>\n        <FormGroup label=\"Password\" isRequired fieldId=\"horizontal-form-name\">\n          <TextInput\n            value={customerPasswordValue}\n            isRequired\n            type=\"password\"\n            id=\"horizontal-form-name\"\n            aria-describedby=\"horizontal-form-name-helper\"\n            name=\"horizontal-form-name\"\n            onChange={this.handleCustomerPasswordChange}\n          />\n        </FormGroup>\n        <FormGroup label=\"Date of birth\">\n          <DatePicker\n            value={customerDobValue}\n            onChange={this.handleCustomerDobChange}\n          />\n        </FormGroup>\n        <FormGroup label=\"Gender\" fieldId=\"horizontal-form-category\">\n          <FormSelect\n            value={customerGenderDrawerValue}\n            isRequired\n            onChange={this.handleCustomerGenderChange}\n            id=\"horzontal-form-category\"\n            name=\"horizontal-form-category\"\n          >\n            {this.genderDrawerOptions.map((option, index) => (\n              <FormSelectOption\n                isDisabled={option.disabled}\n                key={index}\n                value={option.value}\n                label={option.label}\n              />\n            ))}\n          </FormSelect>\n        </FormGroup>\n\n        <ActionGroup>{button}</ActionGroup>\n      </Form>\n    );\n\n    const panelContent = (\n      <DrawerPanelContent>\n        <DrawerHead>\n          <span tabIndex={isExpanded ? 0 : -1} ref={this.drawerRef}>\n            {formContent}\n          </span>\n          <DrawerActions>\n            <DrawerCloseButton onClick={this.onCloseClick} />\n          </DrawerActions>\n        </DrawerHead>\n      </DrawerPanelContent>\n    );\n\n    const drawerContent = (\n      <Table\n        aria-label=\"Sortable Table\"\n        sortBy={sortBy}\n        onSort={this.onSort}\n        cells={columns}\n        rows={customers.map((customer, index) => [\n          customer.first_name,\n          customer.last_name,\n          customer.username,\n          customer.dob,\n          customer.gender,\n        ])}\n      >\n        <TableHeader />\n        <TableBody onRowClick={this.onRowClick} />\n      </Table>\n    );\n\n    return (\n      <div>\n        <PageSection variant={PageSectionVariants.light}>\n          <TextContent>\n            <Text component=\"h1\">Customers</Text>\n            <Text component=\"p\">Shows every listed customer.</Text>\n          </TextContent>\n          <Toolbar id=\"toolbar\">\n            <ToolbarContent>{toolbarItems}</ToolbarContent>\n          </Toolbar>\n        </PageSection>\n        <PageSection>\n          <Drawer isExpanded={isExpanded} isInline onExpand={this.onExpand}>\n            <DrawerContent panelContent={panelContent}>\n              <DrawerContentBody>{drawerContent}</DrawerContentBody>\n            </DrawerContent>\n          </Drawer>\n        </PageSection>\n      </div>\n    );\n  }\n}\n\nexport default Customers;\n","import React, { Component } from \"react\";\nimport \"@patternfly/react-core/dist/styles/base.css\";\nimport \"@patternfly/patternfly/patternfly.css\";\n\nimport SearchIcon from \"@patternfly/react-icons/dist/js/icons/search-icon\";\nimport TimesIcon from \"@patternfly/react-icons/dist/js/icons/times-icon\";\n\nimport {\n  PageSection,\n  TextContent,\n  Text,\n  PageSectionVariants,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n  Button,\n  ButtonVariant,\n  InputGroup,\n  TextInput,\n  Pagination,\n  PaginationVariant,\n  Drawer,\n  DrawerPanelContent,\n  DrawerContent,\n  DrawerContentBody,\n  DrawerHead,\n  DrawerActions,\n  DrawerCloseButton,\n  Form,\n  FormGroup,\n  FormSelect,\n  FormSelectOption,\n  ActionGroup,\n  Select,\n  SelectVariant,\n  SelectOption,\n} from \"@patternfly/react-core\";\n\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  sortable,\n  SortByDirection,\n} from \"@patternfly/react-table\";\n\nimport axios from \"axios\";\n\nconst orderApi = axios.create({\n  baseURL: \"http://localhost:8080/order\",\n});\n\nconst articleApi = axios.create({\n  baseURL: \"http://localhost:8080/article\",\n});\n\nconst customerApi = axios.create({\n  baseURL: \"http://localhost:8080/customer\",\n});\n\nclass Orders extends Component {\n  constructor(props) {\n    super(props);\n    this.getLength();\n    this.getCustomers();\n    this.getArticles();\n\n    this.state = {\n      orders: [],\n      articles: [],\n      customers: [],\n      columns: [\n        { title: \"Shipping\", transforms: [sortable] },\n        { title: \"Notes\", transforms: [sortable] },\n        { title: \"Status\", transforms: [sortable] },\n        { title: \"Customer\", transforms: [sortable] },\n        { title: \"Articles\", transforms: [sortable] },\n      ],\n      orderArticleValue: [],\n\n      sortBy: {},\n      page: \"0\",\n      perPage: \"10\",\n      length: 0,\n      isExpanded: false,\n      drawerEdit: false,\n      searchValue: \"\",\n      statusIsExpanded: false,\n      statusSelected: null,\n      shippingIsExpanded: false,\n      shippingSelected: null,\n      isOpenOrderArticles: false,\n\n      orderIdValue: undefined,\n      orderNotesValue: \"\",\n      orderShippingDrawerValue: undefined,\n      orderStatusDrawerValue: undefined,\n      orderCustomerValue: undefined,\n    };\n\n    this.drawerRef = React.createRef();\n    this.onSort = this.onSort.bind(this);\n    this.onRowClick = this.onRowClick.bind(this);\n\n    this.handleOrderNotesChange = (orderNotesValue) => {\n      this.setState({ orderNotesValue });\n    };\n    this.handleOrderShippingChange = (orderShippingDrawerValue) => {\n      this.setState({ orderShippingDrawerValue });\n    };\n    this.handleOrderStatusChange = (orderStatusDrawerValue) => {\n      this.setState({ orderStatusDrawerValue });\n    };\n    this.handleOrderCustomerChange = (orderCustomerValue) => {\n      this.setState({ orderCustomerValue });\n    };\n\n    this.onToggleOrderArticles = (isOpenOrderArticles) => {\n      console.log(this.state.orderArticleValue);\n\n      this.setState({\n        isOpenOrderArticles,\n      });\n    };\n\n    this.onSelectOrderArticles = (event, selection) => {\n      const orderArticleValue = this.state.orderArticleValue;\n\n      if (orderArticleValue.includes(selection)) {\n        this.setState(\n          (prevState) => ({\n            orderArticleValue: prevState.orderArticleValue.filter(\n              (item) => item !== selection\n            ),\n          }),\n          () => console.log(\"selections: \", this.state.orderArticleValue)\n        );\n      } else {\n        this.setState(\n          (prevState) => ({\n            orderArticleValue: [...prevState.orderArticleValue, selection],\n          }),\n          () => console.log(\"selections: \", this.state.orderArticleValue)\n        );\n      }\n    };\n\n    this.clearSelectionOrderArticles = () => {\n      this.setState({\n        orderArticleValue: [],\n        isOpenOrderArticles: false,\n      });\n    };\n\n    this.statusDrawerOptions = [\n      { value: undefined, label: \"Please Choose\", disabled: false },\n      { value: 0, label: \"In Progress\", disabled: false },\n      { value: 1, label: \"Delivering\", disabled: false },\n      { value: 2, label: \"Delivered\", disabled: false },\n    ];\n\n    this.statusSelectOptions = [\n      { value: \"Status\", disabled: false, isPlaceholder: true },\n      { value: \"In Progress\", disabled: false },\n      { value: \"Delivering\", disabled: false },\n      { value: \"Delivered\", disabled: false },\n    ];\n\n    this.shippingDrawerOptions = [\n      { value: undefined, label: \"Please Choose\", disabled: false },\n      { value: 0, label: \"DHL\", disabled: false },\n      { value: 1, label: \"Hermes\", disabled: false },\n      { value: 2, label: \"DPD\", disabled: false },\n    ];\n\n    this.shippingSelectOptions = [\n      { value: \"Shipping\", disabled: false, isPlaceholder: true },\n      { value: \"DHL\", disabled: false },\n      { value: \"Hermes\", disabled: false },\n      { value: \"DPD\", disabled: false },\n    ];\n\n    this.onSetPage = (_event, value) => {\n      this.fetch(value - 1, this.state.perPage);\n      this.setState({\n        page: value,\n      });\n    };\n    this.onPerPageSelect = (_event, value) => {\n      this.setState({\n        perPage: value,\n      });\n      this.fetch(0, value);\n    };\n\n    this.onExpand = () => {\n      this.drawerRef.current && this.drawerRef.current.focus();\n    };\n\n    this.onClickAddOrder = () => {\n      const isExpanded = !this.state.isExpanded;\n      this.setState({\n        drawerEdit: false,\n        isExpanded,\n      });\n    };\n\n    this.onCloseClick = () => {\n      this.setState({\n        isExpanded: false,\n        orderNotesValue: \"\",\n        orderArticleValue: [],\n        orderCustomerValue: undefined,\n        orderShippingDrawerValue: undefined,\n        orderStatusDrawerValue: undefined,\n      });\n    };\n\n    this.onSearchValueChange = (inputValue) => {\n      this.setState({\n        searchValue: inputValue,\n      });\n    };\n\n    this.onShippingToggle = (isExpanded) => {\n      this.setState({\n        shippingIsExpanded: isExpanded,\n      });\n    };\n\n    this.onShippingSelect = (event, selection, isPlaceholder) => {\n      if (isPlaceholder) this.clearShippingSelection();\n      this.setState(\n        {\n          shippingSelected: selection,\n          shippingIsExpanded: false,\n        },\n        function () {\n          this.search();\n        }\n      );\n    };\n\n    this.clearShippingSelection = () => {\n      this.setState({\n        shippingSelected: null,\n        shippingIsExpanded: false,\n      });\n      this.fetch(this.state.page, this.state.perPageParameter);\n    };\n\n    this.onStatusToggle = (isExpanded) => {\n      this.setState({\n        statusIsExpanded: isExpanded,\n      });\n    };\n\n    this.onStatusSelect = (event, selection, isPlaceholder) => {\n      if (isPlaceholder) this.clearStatusSelection();\n      this.setState(\n        {\n          statusSelected: selection,\n          statusIsExpanded: false,\n        },\n        function () {\n          this.search();\n        }\n      );\n    };\n\n    this.clearStatusSelection = () => {\n      this.setState({\n        statusSelected: null,\n        statusIsExpanded: false,\n      });\n      this.fetch(this.state.page, this.state.perPageParameter);\n    };\n  }\n\n  getLength = () => {\n    orderApi.get(\"/length\").then((res) => {\n      this.setState({ length: res.data });\n    });\n  };\n\n  getCustomers = () => {\n    customerApi.get(\"/\").then((res) => {\n      this.setState({ customers: res.data });\n    });\n  };\n\n  getArticles = () => {\n    articleApi.get(\"/\").then((res) => {\n      this.setState({ articles: res.data });\n    });\n  };\n\n  fetch = (pageParameter, perPageParameter) => {\n    const params = {\n      page: pageParameter,\n      size: perPageParameter,\n    };\n\n    orderApi.get(\"/paginated\", { params }).then((res) => {\n      this.setState({ orders: res.data });\n    });\n  };\n\n  post = () => {\n    const orderArticleValueIds = this.state.orderArticleValue\n      .map((article) =>\n        this.state.articles.find((item) => {\n          return item.name === article;\n        })\n      )\n      .map((article) => {\n        return { id: article.id };\n      });\n\n    console.log(orderArticleValueIds);\n\n    orderApi.post(\"/\", {\n      shipping: this.state.orderShippingDrawerValue,\n      notes: this.state.orderNotesValue,\n      status: this.state.orderStatusDrawerValue,\n      customer: { id: this.state.orderCustomerValue },\n      articles: orderArticleValueIds,\n    });\n\n    this.setState({\n      isExpanded: false,\n      orderNotesValue: \"\",\n      orderCustomerValue: undefined,\n      orderArticleValue: [],\n      page: \"0\",\n      perPage: \"10\",\n      orderShippingDrawerValue: undefined,\n      orderIdValue: undefined,\n      orderStatusDrawerValue: undefined,\n    });\n  };\n\n  update = () => {\n    console.log(\n      this.state.orderShippingDrawerValue,\n      this.state.orderNotesValue,\n      this.state.orderStatusDrawerValue,\n      this.state.orderCustomerValue,\n      this.state.orderArticleValue\n    );\n    orderApi.put(\"/\" + this.state.orderIdValue, {\n      shipping: this.state.orderShippingDrawerValue,\n      notes: this.state.orderNotesValue,\n      status: this.state.orderStatusDrawerValue,\n      customer: { id: this.state.orderCustomerValue },\n      articles: [{ id: this.state.orderArticleValue }],\n    });\n\n    this.setState({\n      isExpanded: false,\n      orderNotesValue: \"\",\n      orderCustomerValue: \"\",\n      orderArticleValue: [],\n      page: \"0\",\n      perPage: \"10\",\n      orderShippingDrawerValue: undefined,\n      orderIdValue: undefined,\n      orderStatusDrawerValue: undefined,\n    });\n  };\n\n  delete = () => {\n    orderApi.delete(\"/\" + this.state.orderIdValue);\n\n    this.setState({\n      isExpanded: false,\n      orderNotesValue: \"\",\n      orderCustomerValue: \"\",\n      orderArticleValue: [],\n      page: \"0\",\n      perPage: \"10\",\n      orderShippingDrawerValue: undefined,\n      orderIdValue: undefined,\n      orderStatusDrawerValue: undefined,\n    });\n  };\n\n  search = () => {\n    const params = {\n      search: this.state.searchValue,\n      statusFilter: this.state.statusSelected,\n      shippingFilter: this.state.shippingSelected,\n    };\n    orderApi.get(\"/search\", { params }).then((res) => {\n      this.setState({ orders: res.data });\n    });\n  };\n\n  deleteSearch = () => {\n    this.setState({ searchValue: \"\" });\n    this.fetch(this.state.page, this.state.perPage);\n  };\n\n  componentDidMount() {\n    this.fetch(\"0\", \"10\");\n  }\n\n  onSort(_event, index, direction) {\n    const sortedRows = this.state.customers.sort((a, b) =>\n      a[index] < b[index] ? -1 : a[index] > b[index] ? 1 : 0\n    );\n    this.setState({\n      sortBy: {\n        index,\n        direction,\n      },\n      customers:\n        direction === SortByDirection.asc ? sortedRows : sortedRows.reverse(),\n    });\n  }\n\n  onRowClick(_event, row) {\n    const order = this.state.orders[row.secretTableRowKeyId];\n\n    switch (order.status) {\n      case \"INPROGRESS\":\n        this.setState({ orderStatusDrawerValue: 0 });\n        break;\n      case \"DELIVERING\":\n        this.setState({ orderStatusDrawerValue: 1 });\n        break;\n      case \"DELIVERED\":\n        this.setState({ orderStatusDrawerValue: 2 });\n        break;\n      default:\n        this.setState({ orderStatusDrawerValue: undefined });\n        break;\n    }\n\n    switch (order.shipping) {\n      case \"DHL\":\n        this.setState({ orderShippingDrawerValue: 0 });\n        break;\n      case \"HERMES\":\n        this.setState({ orderShippingDrawerValue: 1 });\n        break;\n      case \"DPD\":\n        this.setState({ orderShippingDrawerValue: 2 });\n        break;\n      default:\n        this.setState({ orderShippingDrawerValue: undefined });\n        break;\n    }\n\n    this.setState({\n      drawerEdit: true,\n      isExpanded: true,\n      orderNotesValue: order.notes,\n      orderCustomerValue: order.customer.id,\n      orderArticleValue: order.articles.map((article) => article.name),\n      orderIdValue: order.id,\n    });\n  }\n\n  render() {\n    const {\n      columns,\n      orders,\n      sortBy,\n      isExpanded,\n      orderNotesValue,\n      orderShippingDrawerValue,\n      orderStatusDrawerValue,\n      orderCustomerValue,\n      orderArticleValue,\n      drawerEdit,\n      shippingIsExpanded,\n      shippingSelected,\n      statusIsExpanded,\n      statusSelected,\n      isOpenOrderArticles,\n    } = this.state;\n\n    let button;\n\n    if (!drawerEdit) {\n      button = (\n        <Button variant=\"primary\" onClick={this.post}>\n          Add order\n        </Button>\n      );\n    } else {\n      button = (\n        <div>\n          <Button variant=\"primary\" onClick={this.update}>\n            Edit order\n          </Button>\n          <Button variant=\"danger\" onClick={this.delete} id=\"deleteButton\">\n            Delete order\n          </Button>\n        </div>\n      );\n    }\n\n    let customerDrawerOptions = this.state.customers.map((customer) => {\n      const container = {};\n\n      container.value = customer.id;\n      container.label = customer.first_name.concat(\" \", customer.last_name);\n\n      return container;\n    });\n\n    let articleDrawerOptions = this.state.articles.map((article) => {\n      const container = {};\n\n      container.id = article.id;\n      container.value = article.name;\n      container.description = article.description;\n      container.disabled = false;\n\n      return container;\n    });\n\n    const toolbarItems = (\n      <React.Fragment>\n        <ToolbarItem>\n          <InputGroup>\n            <TextInput\n              name=\"textInput1\"\n              id=\"textInput1\"\n              type=\"search\"\n              aria-label=\"search input example\"\n              onChange={this.onSearchValueChange}\n              value={this.state.searchValue}\n            />\n            <Button\n              variant={ButtonVariant.control}\n              aria-label=\"search button for search input\"\n              onClick={this.search}\n            >\n              <SearchIcon />\n            </Button>\n            <Button\n              variant={ButtonVariant.control}\n              aria-label=\"delete button for search input\"\n              onClick={this.deleteSearch}\n            >\n              <TimesIcon />\n            </Button>\n          </InputGroup>\n        </ToolbarItem>\n        <ToolbarItem>\n          <Select\n            variant={SelectVariant.single}\n            aria-label=\"Select Input\"\n            onToggle={this.onStatusToggle}\n            onSelect={this.onStatusSelect}\n            selections={statusSelected}\n            isOpen={statusIsExpanded}\n          >\n            {this.statusSelectOptions.map((status, index) => (\n              <SelectOption\n                isDisabled={status.disabled}\n                isPlaceholder={status.isPlaceholder}\n                key={index}\n                value={status.value}\n              />\n            ))}\n          </Select>\n        </ToolbarItem>\n        <ToolbarItem>\n          <Select\n            variant={SelectVariant.single}\n            aria-label=\"Select Input\"\n            onToggle={this.onShippingToggle}\n            onSelect={this.onShippingSelect}\n            selections={shippingSelected}\n            isOpen={shippingIsExpanded}\n          >\n            {this.shippingSelectOptions.map((shipping, index) => (\n              <SelectOption\n                isDisabled={shipping.disabled}\n                isPlaceholder={shipping.isPlaceholder}\n                key={index}\n                value={shipping.value}\n              />\n            ))}\n          </Select>\n        </ToolbarItem>\n        <ToolbarItem variant=\"separator\" />\n        <ToolbarItem>\n          <Button variant=\"primary\" onClick={this.onClickAddOrder}>\n            Add Order\n          </Button>\n        </ToolbarItem>\n        <ToolbarItem variant=\"separator\" />\n        <ToolbarItem>\n          <Pagination\n            id={\"pagination\"}\n            itemCount={this.state.length}\n            widgetId=\"pagination-options-menu-top\"\n            perPage={this.state.perPage}\n            page={this.state.page}\n            variant={PaginationVariant.top}\n            onSetPage={this.onSetPage}\n            onPerPageSelect={this.onPerPageSelect}\n            isCompact\n          />\n        </ToolbarItem>\n      </React.Fragment>\n    );\n\n    const formContent = (\n      <Form isHorizontal>\n        <FormGroup label=\"Notes\" isRequired fieldId=\"horizontal-form-name\">\n          <TextInput\n            value={orderNotesValue}\n            isRequired\n            type=\"text\"\n            id=\"horizontal-form-name\"\n            aria-describedby=\"horizontal-form-name-helper\"\n            name=\"horizontal-form-name\"\n            onChange={this.handleOrderNotesChange}\n          />\n        </FormGroup>\n\n        <FormGroup label=\"Shipping\" fieldId=\"horizontal-form-category\">\n          <FormSelect\n            value={orderShippingDrawerValue}\n            isRequired\n            onChange={this.handleOrderShippingChange}\n            id=\"horzontal-form-category\"\n            name=\"horizontal-form-category\"\n          >\n            {this.shippingDrawerOptions.map((option, index) => (\n              <FormSelectOption\n                isDisabled={option.disabled}\n                key={index}\n                value={option.value}\n                label={option.label}\n              />\n            ))}\n          </FormSelect>\n        </FormGroup>\n\n        <FormGroup label=\"Status\" fieldId=\"horizontal-form-category\">\n          <FormSelect\n            value={orderStatusDrawerValue}\n            isRequired\n            onChange={this.handleOrderStatusChange}\n            id=\"horzontal-form-category\"\n            name=\"horizontal-form-category\"\n          >\n            {this.statusDrawerOptions.map((option, index) => (\n              <FormSelectOption\n                isDisabled={option.disabled}\n                key={index}\n                value={option.value}\n                label={option.label}\n              />\n            ))}\n          </FormSelect>\n        </FormGroup>\n\n        <FormGroup label=\"Customer\" fieldId=\"horizontal-form-customer\">\n          <FormSelect\n            value={orderCustomerValue}\n            isRequired\n            onChange={this.handleOrderCustomerChange}\n            id=\"horzontal-form-customer\"\n            name=\"horizontal-form-customer\"\n          >\n            {customerDrawerOptions.map((customer, index) => (\n              <FormSelectOption\n                isDisabled={customer.disabled}\n                key={index}\n                value={customer.value}\n                label={customer.label}\n              />\n            ))}\n          </FormSelect>\n        </FormGroup>\n\n        <FormGroup>\n          <Select\n            variant={SelectVariant.typeaheadMulti}\n            typeAheadAriaLabel=\"Select articles\"\n            onToggle={this.onToggleOrderArticles}\n            onSelect={this.onSelectOrderArticles}\n            onClear={this.clearSelectionOrderArticles}\n            selections={orderArticleValue}\n            isOpen={isOpenOrderArticles}\n            aria-labelledby=\"multi-typeahead-select-id-1\"\n            placeholderText=\"Select articles\"\n          >\n            {articleDrawerOptions.map((article, index) => (\n              <SelectOption\n                isDisabled={article.disabled}\n                key={article.id}\n                value={article.value}\n                {...(article.description && {\n                  description: article.description,\n                })}\n              />\n            ))}\n          </Select>\n        </FormGroup>\n\n        <ActionGroup>{button}</ActionGroup>\n      </Form>\n    );\n\n    const panelContent = (\n      <DrawerPanelContent>\n        <DrawerHead>\n          <span tabIndex={isExpanded ? 0 : -1} ref={this.drawerRef}>\n            {formContent}\n          </span>\n          <DrawerActions>\n            <DrawerCloseButton onClick={this.onCloseClick} />\n          </DrawerActions>\n        </DrawerHead>\n      </DrawerPanelContent>\n    );\n\n    const drawerContent = (\n      <Table\n        aria-label=\"Sortable Table\"\n        sortBy={sortBy}\n        onSort={this.onSort}\n        cells={columns}\n        rows={orders.map((order, index) => [\n          order.shipping,\n          order.notes,\n          order.status,\n          order.customer.first_name.concat(\" \", order.customer.last_name),\n          order.articles\n            .map(function (e) {\n              return e.name;\n            })\n            .join(\", \"),\n        ])}\n      >\n        <TableHeader />\n        <TableBody onRowClick={this.onRowClick} />\n      </Table>\n    );\n\n    return (\n      <div>\n        <PageSection variant={PageSectionVariants.light}>\n          <TextContent>\n            <Text component=\"h1\">Orders</Text>\n            <Text component=\"p\">Shows every listed order.</Text>\n          </TextContent>\n          <Toolbar id=\"toolbar\">\n            <ToolbarContent>{toolbarItems}</ToolbarContent>\n          </Toolbar>\n        </PageSection>\n        <PageSection>\n          <Drawer isExpanded={isExpanded} isInline onExpand={this.onExpand}>\n            <DrawerContent panelContent={panelContent}>\n              <DrawerContentBody>{drawerContent}</DrawerContentBody>\n            </DrawerContent>\n          </Drawer>\n        </PageSection>\n      </div>\n    );\n  }\n}\n\nexport default Orders;\n","import React from \"react\";\nimport \"@patternfly/react-core/dist/styles/base.css\";\nimport \"@patternfly/patternfly/patternfly.css\";\nimport Navigation from \"./Navigation\";\nimport { BrowserRouter as Router, Switch, Link, Route } from \"react-router-dom\";\n\nimport Home from \"./Home\";\nimport Articles from \"./Articles\";\nimport Customers from \"./Customers\";\nimport Orders from \"./Orders\";\n\nimport \"./stylesheet.css\";\n\nimport {\n  Page,\n  PageHeader,\n  PageHeaderTools,\n  PageSidebar,\n  PageSection,\n  PageSectionVariants,\n  Tooltip,\n} from \"@patternfly/react-core\";\n\nimport OutlinedQuestionCircleIcon from \"@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon\";\n\nclass PageComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: false,\n    };\n    this.onNavToggle = () => {\n      this.setState({\n        isNavOpen: !this.state.isNavOpen,\n      });\n    };\n  }\n\n  render() {\n    const { isNavOpen } = this.state;\n\n    const Header = (\n      <PageHeader\n        logo={\n          <Link to=\"/\" className=\"webshopLink\">\n            Webshop\n          </Link>\n        }\n        headerTools={\n          <PageHeaderTools>\n            <Tooltip\n              position=\"left\"\n              enableFlip={false}\n              content={\n                <div className=\"pageHeaderTools\">\n                  This feature has not yet been implemented. However, Basic Auth\n                  by directly calling the API is already possible. Comment the\n                  security-related lines in the application.properties and\n                  Customer.java file and you are ready to go!{\" \"}\n                </div>\n              }\n            >\n              <span aria-label=\"tooltip\" className=\"tooltip\" tabIndex=\"0\">\n                <OutlinedQuestionCircleIcon />\n              </span>\n            </Tooltip>\n            Sign-In\n          </PageHeaderTools>\n        }\n        showNavToggle\n        isNavOpen={isNavOpen}\n        onNavToggle={this.onNavToggle}\n      />\n    );\n    const Sidebar = <PageSidebar nav={<Navigation />} isNavOpen={isNavOpen} />;\n\n    return (\n      <Router>\n        <Page header={Header} sidebar={Sidebar} id=\"page\">\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/orders\" component={Orders} />\n            <Route path=\"/articles\" component={Articles} />\n          </Switch>\n        </Page>\n      </Router>\n    );\n  }\n}\n\nexport default PageComponent;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport Test from \"./test\";\nimport PageComponent from \"./components/PageComponent\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PageComponent />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"@patternfly/patternfly/patternfly.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}